% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_new_parameter_entry.R
\name{create_new_parameter_entry}
\alias{create_new_parameter_entry}
\title{Create new parameter entry}
\usage{
create_new_parameter_entry(
  pathogen = NA,
  new_param = list(article_id = as.integer(NA), parameter_type = as.character(NA),
    parameter_value = as.double(NA), parameter_unit = as.character(NA),
    parameter_lower_bound = as.double(NA), parameter_upper_bound = as.double(NA),
    parameter_value_type = as.character(NA), parameter_uncertainty_single_value =
    as.double(NA), parameter_uncertainty_singe_type = as.character(NA),
    parameter_uncertainty_lower_value = as.double(NA), parameter_uncertainty_upper_value
    = as.double(NA), parameter_uncertainty_type = as.character(NA), 
    
    cfr_ifr_numerator = as.integer(NA), cfr_ifr_denominator = as.integer(NA),
    distribution_type = as.character(NA), distribution_par1_value = as.double(NA),
    distribution_par1_type = as.character(NA), distribution_par1_uncertainty =
    as.logical(NA), distribution_par2_value = as.double(NA), distribution_par2_type =
    as.character(NA), distribution_par2_uncertainty = as.logical(NA),
    method_from_supplement = as.logical(NA), method_moment_value = as.character(NA),
    cfr_ifr_method = as.character(NA), method_r = as.character(NA), 
    
    method_disaggregated_by = as.character(NA), method_disaggregated = as.logical(NA),
    method_disaggregated_only = as.logical(NA), riskfactor_outcome = as.character(NA),
    riskfactor_name = as.character(NA), riskfactor_occupation = as.character(NA),
    riskfactor_significant = as.character(NA), riskfactor_adjusted = as.character(NA),
    population_sex = as.character(NA), population_sample_type = as.character(NA),
    population_group = as.character(NA), population_age_min = as.integer(NA),
    population_age_max = as.integer(NA), 
     population_sample_size = as.integer(NA),
    population_country = as.character(NA), population_location = as.character(NA),
    population_study_start_day = as.integer(NA), population_study_start_month =
    as.character(NA), population_study_start_year = as.integer(NA),
    population_study_end_day = as.integer(NA), population_study_end_month =
    as.character(NA), population_study_end_year = as.integer(NA), genome_site =
    as.character(NA), genomic_sequence_available = as.logical(NA), parameter_class =
    as.character(NA), 
     covidence_id = as.integer(NA))
)
}
\arguments{
\item{pathogen}{name of pathogen}

\item{new_param}{all the required details for the new parameter entry}

\item{vignette_prepend}{string to allow loading data in vignettes}
}
\value{
new row of data to be added to the outbreak data set using the
append_new_entry_to_table() function
}
\description{
Create new parameter entry
}
\examples{
create_new_parameter_entry <-
  function(pathogen = "marburg",
           new_param =
             c("article_id"            = as.integer(NA),
               "parameter_type"        = as.character(NA),
               "parameter_value"       = as.double(NA),
               "parameter_unit"        = as.character(NA),
               "parameter_lower_bound" = as.double(NA),
               "parameter_upper_bound" = as.double(NA),
               "parameter_value_type"  = as.character(NA),
               "parameter_uncertainty_single_value" = as.double(NA),
               "parameter_uncertainty_singe_type"   = as.character(NA),
               "parameter_uncertainty_lower_value"  = as.double(NA),
               "parameter_uncertainty_upper_value"  = as.double(NA),
               "parameter_uncertainty_type"         = as.character(NA),
               "cfr_ifr_numerator"       = as.integer(NA),
               "cfr_ifr_denominator"     = as.integer(NA),
               "distribution_type"       = as.character(NA),
               "distribution_par1_value" = as.double(NA),
               "distribution_par1_type"  = as.character(NA),
               "distribution_par1_uncertainty" = as.logical(NA),
               "distribution_par2_value" = as.double(NA),
               "distribution_par2_type"  = as.character(NA),
               "distribution_par2_uncertainty" = as.logical(NA),
               "method_from_supplement"  = as.logical(NA),
               "method_moment_value"     = as.character(NA),
               "cfr_ifr_method"          = as.character(NA),
               "method_r"                = as.character(NA),
               "method_disaggregated_by" = as.character(NA),
               "method_disaggregated"    = as.logical(NA),
               "method_disaggregated_only" = as.logical(NA),
               "riskfactor_outcome"      = as.character(NA),
               "riskfactor_name"         = as.character(NA),
               "riskfactor_occupation"   = as.character(NA),
               "riskfactor_significant"  = as.character(NA),
               "riskfactor_adjusted"     = as.character(NA),
               "population_sex"          = as.character(NA),
               "population_sample_type"  = as.character(NA),
               "population_group"        = as.character(NA),
               "population_age_min"      = as.integer(NA),
               "population_age_max"      = as.integer(NA),
               "population_sample_size"  = as.integer(NA),
               "population_country"      = as.character(NA),
               "population_location"     = as.character(NA),
               "population_study_start_day"   = as.integer(NA),
               "population_study_start_month" = as.character(NA),
               "population_study_start_year"  = as.integer(NA),
               "population_study_end_day"     = as.integer(NA),
               "population_study_end_month"   = as.character(NA),
               "population_study_end_year"    = as.integer(NA),
               "genome_site"                  = as.character(NA),
               "genomic_sequence_available"   = as.logical(NA),
               "parameter_class"          = as.character(NA),
               "covidence_id"             = as.integer(NA)))
           )
}
