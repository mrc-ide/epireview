[{"path":"https://mrc-ide.github.io/epireview/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 epireview authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mrc-ide.github.io/epireview/LICENSE.html","id":"data-license","dir":"","previous_headings":"","what":"Data License","title":"MIT License","text":"data included R package extracted series systematic reviews carried Pathogen Epidemiology Review Group (PERG). data released CC0 license. details see file LICENSE-CC0 included distribution.","code":""},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_field_options.html","id":"model-field-options","dir":"Articles","previous_headings":"","what":"Model field options","title":"Database field options","text":"Model type Stochastic deterministic Transmission route Compartment type Assumptions Interventions Compartmental Stochastic Airborne close contact SIS Homogeneous mixing Vaccination Branching process Deterministic Human human (direct non-sexual contact) SIR Latent period incubation period Quarantine Agent / Individual based  Vector human SEIR Heterogenity transmission rates - groups Vector Control  Animal reservoir human compartmental Heterogenity transmission rates - time Treatment Unspecified  Sexual compartmental Age dependent susceptibility Contact tracing   Unspecified  Unspecified Hospitals      Treatment Centres      Safe burials      Behaviour changes           Unspecified","code":""},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_field_options.html","id":"parameter-field-options","dir":"Articles","previous_headings":"","what":"Parameter field options","title":"Database field options","text":"Population Country Parameter type Units Parameter uncertainty - single type Parameter uncertainty - paired type Distribution type Distribution parameter 1 - type Distribution parameter 2 - type Disaggregated Sex Setting Group Timing Reproduction number method Time Time IFR_CFR_method Riskfactor outcome Riskfactor name Riskfactor occupation Riskfactor significant Riskfactor adjusted Afghanistan Mutations - mutation rate Percentage (%) Standard Error (SE) CI90% Bernoulli Shape Shape Age Female Community based Healthcare workers Start outbreak Renewal equations / Branching process Exposure/Infection Exposure/Infection Naive Infection Age Abattoir services Significant Adjusted Albania Mutations - evolutionary rate Per hour Standard deviation (Sd) CI95% Beta Scale Scale Disease generation Male Hospital based Farmers Mid outbreak Growth rate Infectiousness Infectiousness Adjusted Severe disease Close contact Correctional facilities significant adjusted Algeria Mutations - substitution rate Per day Variance CRI90% Beta-Binomial Mean Mean Level exposure Household based Outdoor workers End outbreak Compartmental model Symptom Onset/Fever Symptom Onset/Fever Unspecified Death Contact animal Education Unspecified Unspecified American Samoa Growth rate (r) Per week Coefficient variation CRI95% Cauchy Coefficient variation Coefficient variation Occupation Unspecified Housing estate based Animal workers Post outbreak Next generation matrix Seeking Care Seeking Care  Recovery Cormobidity Funeral burial services   Andorra Doubling time Per month Range Cauchy-half Variance Variance Region  Population based Butchers Endemic Empirical (contact tracing) Admission Care/Hospitalisation Admission Care/Hospitalisation  Serology Funeral Healthcare   Angola Halving time Per year  Inter Quartile Range (IQR) Chi-Square-Inverse Meanlog Meanlog Sex  School based Abattoir workers Unspecified Genomics Admission Critical Care/ICU Admission Critical Care/ICU  Hospitalisation Laboratory   Antigua Barbuda Attack rate Hours  Highest Posterior Density Interval 95% Dirichlet Mean sd Mean sd Symptoms  Travel based Pregnant women  Death Death   Household contact Livestock animal herders   Argentina Reproduction number (Basic R0) Days  Exponential   Time  Trade / business based Sex workers  Unspecified Discharge Critical Care/ICU Discharge Critical Care/ICU   Non-household contact Public Transport   Armenia Reproduction number (Effective, Re) Weeks   Gamma    Contact based People inject drugs   Discharge Care/Hospital Discharge Care/Hospital   Occupation Quarantine facilities   Aruba Overdispersion Months   Gamma-Inverse     Household contacts survivors   Recovery/non-Infectiousness Recovery/non-Infectiousness   Sex Veterinary   Australia Relative contribution - human human Max. nr. cases superspreading (related case)   LKJ     Unspecified Persons investigation   Symptom Resolution Symptom Resolution   Social gathering   Austria Relative contribution - zoonotic human Max. nr. cases superspreading (environment)   Multinomial      General population   : Enter Timepoint Text Box : Enter Timepoint Text Box   Unspecified   Azerbaijan Human delay - generation time Substitutions/site/year   Negative-Binomial                Bahamas, Human delay - serial interval Mutations/genome/generation (U)   Normal      Unspecified           Bahrain Human delay - latent period Mutations/site/generation (mu)   Normal-Log                 Bangladesh Human delay - incubation period units   Normal-Logit                 Barbados Human delay - infectious period Unspecified   Normal-Multivariate                 Belarus Human delay - time care (length stay)    Poisson                 Belgium Human delay - human delay (go section)    Student-t                 Belize Mosquito delay - incubation period    Student-t Multivariate                 Benin Mosquito delay - time viral clearance    Uniform                 Bermuda Severity - case fatality rate (CFR)    Uniform-Discrete                 Bhutan Severity - infection fatality rate (IFR)    Wishart-Inverse                 Bolivia Seroprevalence - IgM                     Bosnia Herzegovina Seroprevalence - IgG                     Botswana Seroprevalence - PRNT                     Brazil Seroprevalence - HAI/HI                     British Virgin Islands Seroprevalence - IFA                     Brunei Darussalam Seroprevalence - Unspecified                     Bulgaria Risk factors                     Burkina Faso                      Burundi                      Cabo Verde                      Cambodia                      Cameroon                      Canada                      Cayman Islands                      Central African Republic                      Chad                      Channel Islands                      Chile                      China                      Colombia                      Comoros                      Congo, Dem. Rep.                      Congo, Rep.                      Costa Rica                      C\\u00F4te d'Ivoire                      Croatia                      Cuba                      Cura\\u00E7ao                      Cyprus                      Czech Republic                      Denmark                      Djibouti                      Dominica                      Dominican Republic                      Ecuador                      Egypt, Arab Rep.                      El Salvador                      Equatorial Guinea                      Eritrea                      Estonia                      Eswatini                      Ethiopia                      Faroe Islands                      Fiji                      Finland                      France                      French Polynesia                      Gabon                      Gambia,                      Georgia                      Germany                      Ghana                      Gibraltar                      Greece                      Greenland                      Grenada                      Guam                      Guatemala                      Guinea                      Guinea-Bissau                      Guyana                      Haiti                      Honduras                      Hong Kong SAR, China                      Hungary                      Iceland                      India                      Indonesia                      Iran, Islamic Rep.                      Iraq                      Ireland                      Isle Man                      Israel                      Italy                      Jamaica                      Japan                      Jordan                      Kazakhstan                      Kenya                      Kiribati                      Korea, Dem. People's Rep.                      Korea, Rep.                      Kosovo                      Kuwait                      Kyrgyz Republic                      Lao PDR                      Latvia                      Lebanon                      Lesotho                      Liberia                      Libya                      Liechtenstein                      Lithuania                      Luxembourg                      Macao SAR, China                      Madagascar                      Malawi                      Malaysia                      Maldives                      Mali                      Malta                      Marshall Islands                      Mauritania                      Mauritius                      Mexico                      Micronesia, Fed. Sts.                      Moldova                      Monaco                      Mongolia                      Montenegro                      Morocco                      Mozambique                      Myanmar                      Namibia                      Nauru                      Nepal                      Netherlands                      New Caledonia                      New Zealand                      Nicaragua                      Niger                      Nigeria                      North Macedonia                      Northern Mariana Islands                      Norway                      Oman                      Pakistan                      Palau                      Panama                      Papua New Guinea                      Paraguay                      Peru                      Philippines                      Poland                      Portugal                      Puerto Rico                      Qatar                      Romania                      Russian Federation                      Rwanda                      Samoa                      San Marino                      S\\u00E3o Tom\\u00E9 Pr\\u00EDncipe                      Saudi Arabia                      Senegal                      Serbia                      Seychelles                      Sierra Leone                      Singapore                      Sint Maarten (Dutch part)                      Slovak Republic                      Slovenia                      Solomon Islands                      Somalia                      South Africa                      South Sudan                      Spain                      Sri Lanka                      St. Kitts Nevis                      St. Lucia                      St. Martin (French part)                      St. Vincent Grenadines                      Sudan                      Suriname                      Sweden                      Switzerland                      Syrian Arab Republic                      Taiwan, China                      Tajikistan                      Tanzania                      Thailand                      Timor Leste                      Togo                      Tonga                      Trinidad Tobago                      Tunisia                      Turkey                      Turkmenistan                      Turks Caicos Islands                      Tuvalu                      Uganda                      Ukraine                      United Arab Emirates                      United Kingdom                      United States                      Uruguay                      Uzbekistan                      Vanuatu                      Venezuela                      Vietnam                      Virgin Islands                      West Bank Gaza                      Yemen                      Yuogslavia                      Zambia                      Zimbabwe","code":""},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_field_options.html","id":"outbreak-field-options","dir":"Articles","previous_headings":"","what":"Outbreak field options","title":"Database field options","text":"Outbreak country Detection mode Afghanistan Symptoms Albania Molecular (PCR etc) Algeria specified American Samoa  Andorra  Angola  Antigua Barbuda  Argentina  Armenia  Aruba  Australia  Austria  Azerbaijan  Bahamas,  Bahrain  Bangladesh  Barbados  Belarus  Belgium  Belize  Benin  Bermuda  Bhutan  Bolivia  Bosnia Herzegovina  Botswana  Brazil  British Virgin Islands  Brunei Darussalam  Bulgaria  Burkina Faso  Burundi  Cabo Verde  Cambodia  Cameroon  Canada  Cayman Islands  Central African Republic  Chad  Channel Islands  Chile  China  Colombia  Comoros  Congo, Dem. Rep.  Congo, Rep.  Costa Rica  C\\u00F4te d'Ivoire  Croatia  Cuba  Cura\\u00E7ao  Cyprus  Czech Republic  Denmark  Djibouti  Dominica  Dominican Republic  Ecuador  Egypt, Arab Rep.  El Salvador  Equatorial Guinea  Eritrea  Estonia  Eswatini  Ethiopia  Faroe Islands  Fiji  Finland  France  French Polynesia  Gabon  Gambia,  Georgia  Germany  Ghana  Gibraltar  Greece  Greenland  Grenada  Guam  Guatemala  Guinea  Guinea-Bissau  Guyana  Haiti  Honduras  Hong Kong SAR, China  Hungary  Iceland  India  Indonesia  Iran, Islamic Rep.  Iraq  Ireland  Isle Man  Israel  Italy  Jamaica  Japan  Jordan  Kazakhstan  Kenya  Kiribati  Korea, Dem. People's Rep.  Korea, Rep.  Kosovo  Kuwait  Kyrgyz Republic  Lao PDR  Latvia  Lebanon  Lesotho  Liberia  Libya  Liechtenstein  Lithuania  Luxembourg  Macao SAR, China  Madagascar  Malawi  Malaysia  Maldives  Mali  Malta  Marshall Islands  Mauritania  Mauritius  Mexico  Micronesia, Fed. Sts.  Moldova  Monaco  Mongolia  Montenegro  Morocco  Mozambique  Myanmar  Namibia  Nauru  Nepal  Netherlands  New Caledonia  New Zealand  Nicaragua  Niger  Nigeria  North Macedonia  Northern Mariana Islands  Norway  Oman  Pakistan  Palau  Panama  Papua New Guinea  Paraguay  Peru  Philippines  Poland  Portugal  Puerto Rico  Qatar  Romania  Russian Federation  Rwanda  Samoa  San Marino  S\\u00E3o Tom\\u00E9 Pr\\u00EDncipe  Saudi Arabia  Senegal  Serbia  Seychelles  Sierra Leone  Singapore  Sint Maarten (Dutch part)  Slovak Republic  Slovenia  Solomon Islands  Somalia  South Africa  South Sudan  Spain  Sri Lanka  St. Kitts Nevis  St. Lucia  St. Martin (French part)  St. Vincent Grenadines  Sudan  Suriname  Sweden  Switzerland  Syrian Arab Republic  Taiwan, China  Tajikistan  Tanzania  Thailand  Timor Leste  Togo  Tonga  Trinidad Tobago  Tunisia  Turkey  Turkmenistan  Turks Caicos Islands  Tuvalu  Uganda  Ukraine  United Arab Emirates  United Kingdom  United States  Uruguay  Uzbekistan  Vanuatu  Venezuela  Vietnam  Virgin Islands  West Bank Gaza  Yemen  Yuogslavia  Zambia  Zimbabwe","code":""},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_update.html","id":"step-1-git-clone-repo","dir":"Articles","previous_headings":"","what":"Step 1 – git clone repo","title":"How to update the database with new article data","text":"Please clone git repository git clone https://github.com/mrc-ide/epireview.git create new branch add data paper(s).","code":""},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_update.html","id":"step-2-add-article-details","dir":"Articles","previous_headings":"","what":"Step 2 – add article details","title":"How to update the database with new article data","text":"Please provide available data article. quality assessment, refer wiki epireview github repo, provides details assess quality papers (score 0, 1 NA applicable). creates new entry article. enforce first author’s first name (initials), first author’s surname, article title, journal, year publication, needs provided. Please take note article_id covidence_id need link parameters, outbreaks models paper. can appended article dataset running following command (includes validations data provided):","code":"# load packages and source code library(tidyverse) library(validate) source('R/create_new_article_entry.R') source('R/append_new_entry_to_table.R') source('R/load_epidata.R')  new_article <-    create_new_article_entry(     pathogen = \"marburg\",     new_article = c(list(\"first_author_first_name\" = as.character(\"Joe\")),                     list(\"first_author_surname\"    = as.character(\"Blocks\")),                     list(\"article_title\"           = as.character(\"hello\")),                     list(\"doi\"                     = as.character(NA)),                     list(\"journal\"                 = as.character(\"ABC\")),                     list(\"year_publication\"        = as.integer(2000)),                     list(\"volume\"                  = as.integer(NA)),                     list(\"issue\"                   = as.integer(NA)),                     list(\"page_first\"              = as.integer(NA)),                     list(\"page_last\"               = as.integer(NA)),                     list(\"paper_copy_only\"         = as.logical(NA)),                     list(\"notes\"                   = as.character(NA)),                     list(\"qa_m1\"                   = as.integer(1)),                     list(\"qa_m2\"                   = as.integer(0)),                     list(\"qa_a3\"                   = as.integer(NA)),                     list(\"qa_a4\"                   = as.integer(1)),                     list(\"qa_d5\"                   = as.integer(0)),                     list(\"qa_d6\"                   = as.integer(NA)),                     list(\"qa_d7\"                   = as.integer(1))),     vignette_prepend = \"\") new_article_dataset <- append_new_entry_to_table(pathogen = \"marburg\",                                                  table_type = \"article\",                                                  new_row = new_article,                                                  validate = TRUE,                                                  write_table = TRUE,                                                  vignette_prepend = \"\")"},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_update.html","id":"step-3-add-model-details","dir":"Articles","previous_headings":"","what":"Step 3 – add model details","title":"How to update the database with new article data","text":"paper include model can skip section. model table set number field options can accepted. field options can viewed Database field options vignette. validations function assert valid options used. like add multiple models, important add model sequentially order ensure model_data_id set correctly.","code":"# load packages and source code library(tidyverse) library(validate) source('R/create_new_model_entry.R')  new_model <- create_new_model_entry(   pathogen = \"marburg\",   new_model = c(list(\"article_id\"           = as.integer(1)),                 list(\"model_type\"           = as.character(\"Compartmental\")),                 list(\"compartmental_type\"   = as.character(\"SEIR, SIR\")),                 list(\"stoch_deter\"          = as.character(\"Deterministic\")),                 list(\"theoretical_model\"    = as.logical(FALSE)),                 list(\"interventions_type\"   = as.character(\"Vaccination\")),                 list(\"code_available\"       = as.logical(TRUE)),                 list(\"transmission_route\"   = as.character(\"Sexual\")),                 list(\"assumptions\"          = as.character(\"Unspecified\")),                 list(\"covidence_id\"         = as.integer(2059))),   vignette_prepend = \"\") new_model_dataset <- append_new_entry_to_table(pathogen = \"marburg\",                                                table_type = \"model\",                                                new_row = new_model,                                                validate = TRUE,                                                write_table = TRUE,                                                vignette_prepend = \"\")"},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_update.html","id":"step-4-add-outbreak-details","dir":"Articles","previous_headings":"","what":"Step 4 – add outbreak details","title":"How to update the database with new article data","text":"paper include outbreak can skip section. table set number field options can accepted. field options can viewed Database field options vignette. validations function assert valid options used. like add multiple outbreaks, important add outbreak sequentially order ensure outbreak_id set correctly.","code":"# load packages and source code library(tidyverse) library(validate) source('R/create_new_outbreak_entry.R')  new_outbreak <- create_new_outbreak_entry(   pathogen = \"marburg\",   new_outbreak = c(list(\"article_id\"                = as.integer(1)),                    list(\"outbreak_start_day\"        = as.integer(NA)),                    list(\"outbreak_start_month\"      = as.character(NA)),                    list(\"outbreak_start_year\"       = as.integer(1999)),                    list(\"outbreak_end_day\"          = as.integer(NA)),                    list(\"outbreak_end_month\"        = as.character(NA)),                    list(\"outbreak_date_year\"        = as.integer(2001)),                    list(\"outbreak_duration_months\"  = as.integer(NA)),                    list(\"outbreak_size\"             = as.integer(2)),                    list(\"asymptomatic_transmission\" = as.integer(0)),                    list(\"outbreak_country\"          = as.character(\"Tanzania\")),                    list(\"outbreak_location\"         = as.character(NA)),                    list(\"cases_confirmed\"           = as.integer(NA)),                    list(\"cases_mode_detection\"      = as.character(NA)),                    list(\"cases_suspected\"           = as.integer(NA)),                    list(\"cases_asymptomatic\"        = as.integer(NA)),                    list(\"deaths\"                    = as.integer(2)),                    list(\"cases_severe_hospitalised\" = as.integer(NA)),                    list(\"covidence_id\"              = as.integer(2059))),   vignette_prepend = \"\") new_outbreak_dataset <- append_new_entry_to_table(pathogen = \"marburg\",                                                   table_type = \"outbreak\",                                                   new_row = new_outbreak,                                                   validate = TRUE,                                                   write_table = TRUE,                                                   vignette_prepend = \"\")"},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_update.html","id":"step-5-add-parameter-details","dir":"Articles","previous_headings":"","what":"Step 5 – add parameter details","title":"How to update the database with new article data","text":"paper include parameters can skip section. like add multiple parameters, important add parameter sequentially order ensure parameter_data_id set correctly.","code":"# load packages and source code library(tidyverse) library(validate) source('R/create_new_parameter_entry.R')  new_parameter <- create_new_parameter_entry(   pathogen = \"marburg\",   new_param   = c(list(\"article_id\"                    = as.integer(1)),                   list(\"parameter_type\"                = as.character(NA)),                   list(\"parameter_value\"               = as.double(NA)),                   list(\"parameter_unit\"                = as.character(NA)),                   list(\"parameter_lower_bound\"         = as.double(NA)),                   list(\"parameter_upper_bound\"         = as.double(NA)),                   list(\"parameter_value_type\"          = as.character(NA)),                   list(\"parameter_uncertainty_single_value\" = as.double(NA)),                   list(\"parameter_uncertainty_singe_type\"   = as.character(NA)),                   list(\"parameter_uncertainty_lower_value\"  = as.double(NA)),                   list(\"parameter_uncertainty_upper_value\"  = as.double(NA)),                   list(\"parameter_uncertainty_type\"         = as.character(NA)),                   list(\"cfr_ifr_numerator\"             = as.integer(NA)),                   list(\"cfr_ifr_denominator\"           = as.integer(NA)),                   list(\"distribution_type\"             = as.character(NA)),                   list(\"distribution_par1_value\"       = as.double(NA)),                   list(\"distribution_par1_type\"        = as.character(NA)),                   list(\"distribution_par1_uncertainty\" = as.logical(NA)),                   list(\"distribution_par2_value\"       = as.double(NA)),                   list(\"distribution_par2_type\"        = as.character(NA)),                   list(\"distribution_par2_uncertainty\" = as.logical(NA)),                   list(\"method_from_supplement\"        = as.logical(NA)),                   list(\"method_moment_value\"           = as.character(NA)),                   list(\"cfr_ifr_method\"                = as.character(NA)),                   list(\"method_r\"                      = as.character(NA)),                   list(\"method_disaggregated_by\"       = as.character(NA)),                   list(\"method_disaggregated\"          = as.logical(NA)),                   list(\"method_disaggregated_only\"     = as.logical(NA)),                   list(\"riskfactor_outcome\"            = as.character(NA)),                   list(\"riskfactor_name\"               = as.character(NA)),                   list(\"riskfactor_occupation\"         = as.character(NA)),                   list(\"riskfactor_significant\"        = as.character(NA)),                   list(\"riskfactor_adjusted\"           = as.character(NA)),                   list(\"population_sex\"                = as.character(NA)),                   list(\"population_sample_type\"        = as.character(NA)),                   list(\"population_group\"              = as.character(NA)),                   list(\"population_age_min\"            = as.integer(NA)),                   list(\"population_age_max\"            = as.integer(NA)),                   list(\"population_sample_size\"        = as.integer(NA)),                   list(\"population_country\"            = as.character(NA)),                   list(\"population_location\"           = as.character(NA)),                   list(\"population_study_start_day\"    = as.integer(NA)),                   list(\"population_study_start_month\"  = as.character(NA)),                   list(\"population_study_start_year\"   = as.integer(NA)),                   list(\"population_study_end_day\"      = as.integer(NA)),                   list(\"population_study_end_month\"    = as.character(NA)),                   list(\"population_study_end_year\"     = as.integer(NA)),                   list(\"genome_site\"                   = as.character(NA)),                   list(\"genomic_sequence_available\"    = as.logical(NA)),                   list(\"parameter_class\"               = as.character(NA)),                   list(\"covidence_id\"                  = as.integer(2059)),                   list(\"Uncertainty\"                   = as.character(NA)),                   list(\"Survey year\"                   = as.character(NA))),   vignette_prepend = \"\") new_parameter_dataset <- append_new_entry_to_table(pathogen = \"marburg\",                                                    table_type = \"parameter\",                                                    new_row = new_parameter,                                                    validate = TRUE,                                                    write_table = TRUE,                                                    vignette_prepend = \"\")"},{"path":"https://mrc-ide.github.io/epireview/articles/pathogen_database_update.html","id":"step-6-create-a-pull-request","dir":"Articles","previous_headings":"","what":"Step 6 – create a pull request","title":"How to update the database with new article data","text":"completed steps, can push updated datasets branch epireview repository, submit pull request. Please ensure pull request contains following: Details paper, including doi Confirmation checked paper satisfies inclusion exclusion criteria systematic review pathogen update concerns tables updated comments observations reviewer may find helpful strongly encourage use utility functions set vignette. run data validation tests , fail, pull request rejected.","code":""},{"path":"https://mrc-ide.github.io/epireview/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rebecca Nash. Author. Christian Morgenstern. Author. Cosmo Santoni. Author. Sangeeta Bhatia. Author, maintainer. Richard Sheppard. Author. Joseph Hicks. Author. Gina Cuomo-Dannenburg. Author. Ruth McCabe. Author. Kelly McCain. Author. Joshua Lambert. Author. Anne Cori. Author. Thomas Rawson. Author. Patrick Doohan. Author. Tristan Naidoo. Author.           -12392 Shazia Ruybal-Pesántez. Author.","code":""},{"path":"https://mrc-ide.github.io/epireview/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nash R, Morgenstern C, Santoni C, Bhatia S, Sheppard R, Hicks J, Cuomo-Dannenburg G, McCabe R, McCain K, Lambert J, Cori , Rawson T, Doohan P, Naidoo T, Ruybal-Pesántez S (2024). epireview: Tools update summarise latest pathogen data Pathogen Epidemiology Review Group (PERG). R package version 1.4.0, https://mrc-ide.github.io/epireview/.","code":"@Manual{,   title = {epireview: Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)},   author = {Rebecca Nash and Christian Morgenstern and Cosmo Santoni and Sangeeta Bhatia and Richard Sheppard and Joseph Hicks and Gina Cuomo-Dannenburg and Ruth McCabe and Kelly McCain and Joshua Lambert and Anne Cori and Thomas Rawson and Patrick Doohan and Tristan Naidoo and Shazia Ruybal-Pesántez},   year = {2024},   note = {R package version 1.4.0},   url = {https://mrc-ide.github.io/epireview/}, }"},{"path":"https://mrc-ide.github.io/epireview/index.html","id":"epireview","dir":"","previous_headings":"","what":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","title":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","text":"Please note epireview currently active development. means data format, software interface, features evolving likely change. version used publication Marburg virus disease (preprint) tagged V0.1.0 available . can use version accompanying data (appropriate citation) plan make extensive use epireview, please first get touch email. epireview tool obtain latest data, figures tables Pathogen Epidemiology Review Group (PERG). package also contains functions update pathogen-specific databases new data peer-reviewed papers become available. can submitted via pull-request checked team. install latest version epireview, use:","code":"remotes::install_github('mrc-ide/epireview')"},{"path":"https://mrc-ide.github.io/epireview/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","text":"load pathogen-specific data, moment, package hosts data Ebola, Marburg Lassa. load list consisting four elements (articles, params, outbreaks, models). visualise parameter values, functions interest ","code":"ebola <- epireview::load_epidata(\"ebola\") params <- ebola[[\"params\"]] forest_plot_rt(params, col_by = \"population_country\", shape_by = \"parameter_value_type\") forest_plot_r0(params) forest_plot_serial_interval(params) forest_plot_incubation_period(params) forest_plot_infectious_period(params)"},{"path":"https://mrc-ide.github.io/epireview/index.html","id":"project-overview","dir":"","previous_headings":"","what":"Project overview","title":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","text":"COVID-19 pandemic highlighted critical role mathematical modelling can play supporting evidence-based decision-making outbreaks (e.g. project expected epidemic size, required hospital capacity assess potential population-level impact interventions). However, early epidemic, modelling efforts can hampered delayed lack centralised resource summarising existing model structures input parameters disease interest. Literature reviews therefore often conducted epidemics identify plausible parameter ranges /existing mathematical model structures (e.g. Van Kerkhove et al. Scientific data 2015) mostly limited individual parameters. group ~20 volunteer researchers currently formerly Imperial College London interest outbreaks working together systematically review mathematical models parameters nine World Health Organization () 2019 blue-print priority pathogens: Nairo virus (Crimean-Congo haemorrhagic fever), Ebola virus, Henipa virus, Lassa mammarenavirus, Marburg virus, Middle East respiratory syndrome coronavirus (MERS-CoV), Rift Valley fever virus, Severe Acute Respiratory Syndrome coronavirus (SARS-CoV-1), Zika virus. pathogens, strains thereof, approved vaccines treatments hence anticipate mathematical modelling likely play major role supporting epidemic response. include SARS-CoV-2 vaccines exist pathogen body literature far exceeds capacity team. pathogen, review published mathematical models, information transmission, evolution, natural history severity, well seroprevalence studies reported sizes previous outbreaks. quality paper also assessed part review. series systematic reviews registered PROSPERO: CRD42023393345","code":""},{"path":"https://mrc-ide.github.io/epireview/index.html","id":"pathogen-database","dir":"","previous_headings":"","what":"Pathogen database","title":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","text":"One output project database initially populated information extracted can easily updated new parameter estimates information additional pathogens become available. code repository provides functions access data pathogen. update repository progress work. expected timeline provided table. provide functionality update existing databases new data new research (line inclusion exclusion criteria) becomes available. Tables figures pathogen can updated new data added database. Vignettes github wiki contain required information data. add functionality create/add new pathogens currently included review.","code":""},{"path":"https://mrc-ide.github.io/epireview/index.html","id":"pathogen-overview-and-timeline","dir":"","previous_headings":"","what":"Pathogen overview and timeline","title":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","text":"interested adding pathogen database please feel free contact us.","code":""},{"path":"https://mrc-ide.github.io/epireview/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG)","text":"code package licensed MIT License. See LICENSE file details. data package released CC0 license public domain. See LICENSE-CC0 file details.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/append_new_entry_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Append new entry to article, outbreak, model, or parameter table — append_new_entry_to_table","title":"Append new entry to article, outbreak, model, or parameter table — append_new_entry_to_table","text":"function appends new entry article, outbreak, model,  parameter tables.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/append_new_entry_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append new entry to article, outbreak, model, or parameter table — append_new_entry_to_table","text":"","code":"append_new_entry_to_table(pathogen, table, new_row, validate = TRUE)"},{"path":"https://mrc-ide.github.io/epireview/reference/append_new_entry_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append new entry to article, outbreak, model, or parameter table — append_new_entry_to_table","text":"pathogen name pathogen. Must one priority pathogens can get list priority pathogens currently included package calling function priority_pathogens. table table loaded. Must one \"article\", \"parameter\", \"outbreak\", \"model\" new_row new row data added table, can generated using utility functions create_new_article_entry(), create_new_model_entry(), create_new_outbreak_entry(), create_new_parameter_entry(). validate check new row added passes minimum criteria (either TRUE FALSE)","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/append_new_entry_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append new entry to article, outbreak, model, or parameter table — append_new_entry_to_table","text":"table new entry","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/article_column_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the column types for the article data frame — article_column_type","title":"Define the column types for the article data frame — article_column_type","text":"function defines column types article data frame used epireview package. readr generally good guessing column types, better explicit. Moreover, reads column NAs logical vector, particularly undesirable us. function intended used internally load_epidata_raw files read.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/article_column_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the column types for the article data frame — article_column_type","text":"","code":"article_column_type(pathogen)"},{"path":"https://mrc-ide.github.io/epireview/reference/article_column_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the column types for the article data frame — article_column_type","text":"pathogen name pathogen. Must one priority pathogens can get list priority pathogens currently included package calling function priority_pathogens.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/article_column_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the column types for the article data frame — article_column_type","text":"list column types article data frame","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/assign_qa_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign quality assessment score to each article — assign_qa_score","title":"Assign quality assessment score to each article — assign_qa_score","text":"Assign quality assessment score article","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/assign_qa_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign quality assessment score to each article — assign_qa_score","text":"","code":"assign_qa_score(articles, ignore_errors = FALSE)"},{"path":"https://mrc-ide.github.io/epireview/reference/assign_qa_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign quality assessment score to each article — assign_qa_score","text":"articles data.frame loaded load_epidata function ignore_errors logical; TRUE, function assign QA scores possible (.e. answers quality assessment questions NA) set QA score NAfor articles answers NA. FALSE, error thrown instead.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/assign_qa_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign quality assessment score to each article — assign_qa_score","text":"named list consisting two elements. first element list article data.frame updated column containing three new columns: qs_denominator (total number questions answered), qs_numerator (number questions answered 'yes') qa_score (QA score). second element list (named errors) data.frame containing articles NA answers.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/assign_qa_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign quality assessment score to each article — assign_qa_score","text":"used bespoke 7 question quality assessment (QA) questionnaire assess quality articles. questions can retrieved using qa_questions function. function assigns QA score article number questions answered 'yes' divided total number questions answered (answer might NA question relevant article consideration). Articles NA answers excluded QA unless ignore_errors set TRUE.","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/assign_qa_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign quality assessment score to each article — assign_qa_score","text":"","code":"lassa <- load_epidata(\"lassa\") #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for lassa lassa_qa <- assign_qa_score(lassa$articles, ignore_errors = FALSE) head(lassa_qa$articles[, c(\"qa_denominator\", \"qa_numerator\", \"qa_score\")]) #> # A tibble: 6 × 3 #>   qa_denominator qa_numerator qa_score #>            <int>        <int>    <dbl> #> 1              5            2      0.4 #> 2              5            2      0.4 #> 3              2            2      1   #> 4              5            1      0.2 #> 5              5            2      0.4 #> 6              5            2      0.4"},{"path":"https://mrc-ide.github.io/epireview/reference/attack_double_growth_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for attack rate, doubling time and growth rate parameters in the $params table from load_epidata() — attack_double_growth_key_columns","title":"Key columns for attack rate, doubling time and growth rate parameters in the $params table from load_epidata() — attack_double_growth_key_columns","text":"Key columns attack rate, doubling time growth rate parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/attack_double_growth_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for attack rate, doubling time and growth rate parameters in the $params table from load_epidata() — attack_double_growth_key_columns","text":"","code":"attack_double_growth_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/attack_double_growth_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for attack rate, doubling time and growth rate parameters in the $params table from load_epidata() — attack_double_growth_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/cfr_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for CFR parameters in the $params table from load_epidata() — cfr_key_columns","title":"Key columns for CFR parameters in the $params table from load_epidata() — cfr_key_columns","text":"Key columns CFR parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/cfr_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for CFR parameters in the $params table from load_epidata() — cfr_key_columns","text":"","code":"cfr_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/cfr_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for CFR parameters in the $params table from load_epidata() — cfr_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_column_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks that the column types of the input csv matches the column types expected by epireview. — check_column_types","title":"Checks that the column types of the input csv matches the column types expected by epireview. — check_column_types","text":"function creates vroom object (type created read_csv) checks problems file. provide offending columns number problematic rows (per column). csv details issue written tmp file location provided. function prevent data loaded column types correct.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_column_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks that the column types of the input csv matches the column types expected by epireview. — check_column_types","text":"","code":"check_column_types(file_path, col_types, raw_colnames)"},{"path":"https://mrc-ide.github.io/epireview/reference/check_column_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks that the column types of the input csv matches the column types expected by epireview. — check_column_types","text":"file_path path csv file column types checked col_types column types expected epireview. specified column type functions (e.g., article_column_type, parameter_column_type) used read data. raw_colnames column names csv file","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_column_types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks that the column types of the input csv matches the column types expected by epireview. — check_column_types","text":"function intended used internally load_epidata_raw files read.","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/check_df_for_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanity checks before meta-analysis — check_df_for_meta","title":"Sanity checks before meta-analysis — check_df_for_meta","text":"Sanity checks meta-analysis","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_df_for_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanity checks before meta-analysis — check_df_for_meta","text":"","code":"check_df_for_meta(df, cols_needed)"},{"path":"https://mrc-ide.github.io/epireview/reference/check_df_for_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanity checks before meta-analysis — check_df_for_meta","text":"df parameter dataframe. must columns following: parameter_value, parameter_unit, plus two columns numerator denominator proportion interest. dataframe typically params data.frame output load_epidata. cols_needed character vector specifying names columns required meta-analysis.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_df_for_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanity checks before meta-analysis — check_df_for_meta","text":"parameter dataframe offending rows removed.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_df_for_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sanity checks before meta-analysis — check_df_for_meta","text":"function carries series checks parameter dataframe ensure correct format conducting meta-analysis. checks input (1) consists single parameter type; (2) columns required meta-analysis; (3) row value present unit missing, vice versa. rows removed; (4) unit across values parameter. function throw error either one value parameter_type, columns needed meta-analysis missing, parameter_unit across values parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_ulim.html","id":null,"dir":"Reference","previous_headings":"","what":"Check upper limit of parameter values — check_ulim","title":"Check upper limit of parameter values — check_ulim","text":"Check upper limit parameter values","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_ulim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check upper limit of parameter values — check_ulim","text":"","code":"check_ulim(df, ulim, param)"},{"path":"https://mrc-ide.github.io/epireview/reference/check_ulim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check upper limit of parameter values — check_ulim","text":"df data frame containing parameter values. ulim specified upper limit parameter values. param name parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_ulim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check upper limit of parameter values — check_ulim","text":"suggested upper limit parameter values.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_ulim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check upper limit of parameter values — check_ulim","text":"forest plot default upper limit parameter values, based expected range parameter. function checks upper limit parameter values data frame compares default limit. maximum parameter value exceeds specified upper limit, warning message displayed. function also returns suggested upper limit. used internally forest plot functions (warning user). can also use directly update default upper limit forest plot functions.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/check_ulim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check upper limit of parameter values — check_ulim","text":"","code":"df <- data.frame(parameter_value = c(10, 20, 30)) check_ulim(df, 25, \"parameter\") #> Warning: The maximum parameter is 30 ; the ulim is set to 25 . Some points may not be #> plotted. Consider increasing ulim. #> [1] 30"},{"path":"https://mrc-ide.github.io/epireview/reference/color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a consistent color palette for use in figures. Palettes are currently defined for parameters and countries. Any other variable will return NULL — color_palette","title":"Define a consistent color palette for use in figures. Palettes are currently defined for parameters and countries. Any other variable will return NULL — color_palette","text":"Define consistent color palette use figures. Palettes currently defined parameters countries. variable return NULL","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a consistent color palette for use in figures. Palettes are currently defined for parameters and countries. Any other variable will return NULL — color_palette","text":"","code":"color_palette(col_by = c(\"parameter_type\", \"population_country\"), ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/color_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a consistent color palette for use in figures. Palettes are currently defined for parameters and countries. Any other variable will return NULL — color_palette","text":"col_by character vector specifying parameter color palette . ... additional arguments passed underlying palette function. treated names palette elements.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/color_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a consistent color palette for use in figures. Palettes are currently defined for parameters and countries. Any other variable will return NULL — color_palette","text":"named list colors can used forest plots manually setting colors","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/country_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"country_palette Function — country_palette","title":"country_palette Function — country_palette","text":"function returns color palette countries.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/country_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"country_palette Function — country_palette","text":"","code":"country_palette(x = NULL)"},{"path":"https://mrc-ide.github.io/epireview/reference/country_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"country_palette Function — country_palette","text":"x vector country names. provided, function return color palette specified countries.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/country_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"country_palette Function — country_palette","text":"color palette specified countries.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/country_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"country_palette Function — country_palette","text":"","code":"# Get color palette for all countries country_palette() #>                  Liberia                   Guinea             Sierra Leone  #>              \"#5050FFFF\"              \"#CE3D32FF\"              \"#749B58FF\"  #>                  Nigeria                  Senegal                     Mali  #>              \"#F0E685FF\"              \"#466983FF\"              \"#BA6338FF\"  #>                      DRC                    Gabon                   Uganda  #>              \"#5DB1DDFF\"              \"#802268FF\"              \"#6BD76BFF\"  #>              South Sudan                    Kenya                 Ethiopia  #>              \"#D595A7FF\"              \"#924822FF\"              \"#837B8DFF\"  #>                 Cameroon Central African Republic    Republic of the Congo  #>              \"#C75127FF\"              \"#D58F5CFF\"              \"#7A65A5FF\"  #>                    Sudan                     Chad                    Benin  #>              \"#E4AF69FF\"              \"#3B1B53FF\"              \"#CDDEB7FF\"  #>                     Togo                    Ghana             Burkina Faso  #>              \"#612A79FF\"              \"#AE1F63FF\"              \"#E7C76FFF\"  #>              Ivory Coast        Equatorial Guinea                   Angola  #>              \"#5A655EFF\"              \"#CC9900FF\"              \"#99CC00FF\"  #>             South Africa                   Zambia                 Tanzania  #>              \"#A9A9A9FF\"              \"#CC9900FF\"              \"#99CC00FF\"  #>                 Djibouti                  Somalia               Mozambique  #>              \"#33CC00FF\"              \"#00CC33FF\"              \"#00CC99FF\"  #>               Madagascar                   Malawi                 Zimbabwe  #>              \"#0099CCFF\"              \"#0A47FFFF\"              \"#4775FFFF\"  #>           United Kingdom              Unspecified  #>              \"#FFC20AFF\"              \"#FFD147FF\"  #' # Get color palette for specific countries country_palette(c('Liberia', 'Guinea', 'Sierra Leone')) #>      Liberia       Guinea Sierra Leone  #>  \"#5050FFFF\"  \"#CE3D32FF\"  \"#749B58FF\""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_article_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new article entry — create_new_article_entry","title":"Create new article entry — create_new_article_entry","text":"Create new article entry","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_article_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new article entry — create_new_article_entry","text":"","code":"create_new_article_entry(   pathogen = NA,   new_article = list(first_author_first_name = as.character(NA), first_author_surname =     as.character(NA), article_title = as.character(NA), doi = as.character(NA), journal =     as.character(NA), year_publication = as.integer(NA), volume = as.integer(NA), issue =     as.integer(NA), page_first = as.integer(NA), page_last = as.integer(NA),     paper_copy_only = as.logical(NA), notes = as.character(NA), qa_m1 = as.integer(NA),     qa_m2 = as.integer(NA), qa_a3 = as.integer(NA), qa_a4 = as.integer(NA), qa_d5 =     as.integer(NA), qa_d6 = as.integer(NA),       qa_d7 = as.integer(NA)) )"},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_article_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new article entry — create_new_article_entry","text":"pathogen name pathogen new_article required details new article","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_article_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new article entry — create_new_article_entry","text":"return new row data added article data set using append_new_entry_to_table() function","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_model_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new model entry — create_new_model_entry","title":"Create new model entry — create_new_model_entry","text":"Create new model entry","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_model_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new model entry — create_new_model_entry","text":"","code":"create_new_model_entry(   pathogen = NA,   new_model = list(article_id = as.numeric(NA), model_type = as.character(NA),     compartmental_type = as.character(NA), stoch_deter = as.character(NA),     theoretical_model = as.logical(NA), interventions_type = as.character(NA),     code_available = as.logical(NA), transmission_route = as.character(NA), assumptions =     as.character(NA), covidence_id = as.integer(NA)) )"},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_model_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new model entry — create_new_model_entry","text":"pathogen name pathogen new_model required details new model","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_model_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new model entry — create_new_model_entry","text":"return new row data added model data set using append_new_entry_to_table() function","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_outbreak_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new outbreak entry — create_new_outbreak_entry","title":"Create new outbreak entry — create_new_outbreak_entry","text":"Create new outbreak entry","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_outbreak_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new outbreak entry — create_new_outbreak_entry","text":"","code":"create_new_outbreak_entry(pathogen, new_outbreak)"},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_outbreak_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new outbreak entry — create_new_outbreak_entry","text":"pathogen name pathogen new_outbreak required details new outbreak list","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_outbreak_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new outbreak entry — create_new_outbreak_entry","text":"return new row data added outbreak data set using append_new_entry_to_table() function","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_parameter_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new parameter entry — create_new_parameter_entry","title":"Create new parameter entry — create_new_parameter_entry","text":"Create new parameter entry","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_parameter_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new parameter entry — create_new_parameter_entry","text":"","code":"create_new_parameter_entry(   pathogen = NA,   new_param = list(article_id = as.integer(NA), parameter_type = as.character(NA),     parameter_value = as.double(NA), parameter_unit = as.character(NA),     parameter_lower_bound = as.double(NA), parameter_upper_bound = as.double(NA),     parameter_value_type = as.character(NA), parameter_uncertainty_single_value =     as.double(NA), parameter_uncertainty_singe_type = as.character(NA),     parameter_uncertainty_lower_value = as.double(NA), parameter_uncertainty_upper_value     = as.double(NA), parameter_uncertainty_type = as.character(NA),           cfr_ifr_numerator = as.integer(NA), cfr_ifr_denominator = as.integer(NA),     distribution_type = as.character(NA), distribution_par1_value = as.double(NA),     distribution_par1_type = as.character(NA), distribution_par1_uncertainty =     as.logical(NA), distribution_par2_value = as.double(NA), distribution_par2_type =     as.character(NA), distribution_par2_uncertainty = as.logical(NA),     method_from_supplement = as.logical(NA), method_moment_value = as.character(NA),     cfr_ifr_method = as.character(NA), method_r = as.character(NA),           method_disaggregated_by = as.character(NA), method_disaggregated = as.logical(NA),     method_disaggregated_only = as.logical(NA), riskfactor_outcome = as.character(NA),     riskfactor_name = as.character(NA), riskfactor_occupation = as.character(NA),     riskfactor_significant = as.character(NA), riskfactor_adjusted = as.character(NA),     population_sex = as.character(NA), population_sample_type = as.character(NA),     population_group = as.character(NA), population_age_min = as.integer(NA),     population_age_max = as.integer(NA),       population_sample_size = as.integer(NA),     population_country = as.character(NA), population_location = as.character(NA),     population_study_start_day = as.integer(NA), population_study_start_month =     as.character(NA), population_study_start_year = as.integer(NA),     population_study_end_day = as.integer(NA), population_study_end_month =     as.character(NA), population_study_end_year = as.integer(NA), genome_site =     as.character(NA), genomic_sequence_available = as.logical(NA), parameter_class =     as.character(NA),       covidence_id = as.integer(NA)) )"},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_parameter_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new parameter entry — create_new_parameter_entry","text":"pathogen name pathogen new_param required details new parameter entry","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/create_new_parameter_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new parameter entry — create_new_parameter_entry","text":"new row data added outbreak data set using append_new_entry_to_table() function","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/custom_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom color palette. — custom_palette","title":"Create a custom color palette. — custom_palette","text":"utility function creates named color vector user-supplied vectors labels color values. length label color vectors must . resulting custom color palette can used color palette plotting functions.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/custom_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom color palette. — custom_palette","text":"","code":"custom_palette(labels, colors)"},{"path":"https://mrc-ide.github.io/epireview/reference/custom_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom color palette. — custom_palette","text":"labels vector labels used names custom color palette. colors vector colors used custom color palette. can form HEX codes, eg \"#808080\" color names recognized R, eg \"deepskyblue\"","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/custom_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom color palette. — custom_palette","text":"custom palette form named color vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/custom_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom color palette. — custom_palette","text":"","code":"labels <- c(\"Liberia\", \"Guinea\", \"Sierra Leone\") colors <- c(\"#5A5156FF\", \"#E4E1E3FF\", \"#5050FFFF\")  custom_pal <- custom_palette(labels, colors) custom_pal #>      Liberia       Guinea Sierra Leone  #>  \"#5A5156FF\"  \"#E4E1E3FF\"  \"#5050FFFF\""},{"path":"https://mrc-ide.github.io/epireview/reference/data_outbreak_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Process data for outbreak table — data_outbreak_table","title":"Process data for outbreak table — data_outbreak_table","text":"Process data outbreak table","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/data_outbreak_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process data for outbreak table — data_outbreak_table","text":"","code":"data_outbreak_table(pathogen, prepend = \"\")"},{"path":"https://mrc-ide.github.io/epireview/reference/data_outbreak_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process data for outbreak table — data_outbreak_table","text":"pathogen name pathogen e.g. \"marburg\" prepend string allow loading data vignettes","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/data_outbreak_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process data for outbreak table — data_outbreak_table","text":"processed data use input outbreak_table()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/data_outbreak_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process data for outbreak table — data_outbreak_table","text":"","code":"df <- data_outbreak_table(pathogen = \"marburg\") #> Rows: 23 Columns: 24 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): outbreak_start_month, outbreak_end_month, outbreak_country, outbre... #> dbl (15): outbreak_id, article_id, outbreak_start_day, outbreak_start_year, ... #> lgl  (1): outbreak_size #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"https://mrc-ide.github.io/epireview/reference/data_param_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Process data for delay table — data_param_table","title":"Process data for delay table — data_param_table","text":"Process data delay table","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/data_param_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process data for delay table — data_param_table","text":"","code":"data_param_table(pathogen, prepend = \"\", exclude = NA)"},{"path":"https://mrc-ide.github.io/epireview/reference/data_param_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process data for delay table — data_param_table","text":"pathogen name pathogen e.g. \"marburg\" prepend string allow loading data vignettes exclude article IDs exclude","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/data_param_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process data for delay table — data_param_table","text":"processed data use input delay_table(), risk_table() seroprevalence_table()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/data_param_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process data for delay table — data_param_table","text":"","code":"df <- data_param_table(pathogen = \"marburg\", prepend = \"\", exclude = c(15, 17)) #> Rows: 70 Columns: 55 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (26): parameter_data_id, parameter_type, parameter_unit, parameter_value... #> dbl (18): article_id, parameter_value, parameter_lower_bound, parameter_uppe... #> lgl (11): distribution_type, distribution_par1_value, distribution_par1_type... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"https://mrc-ide.github.io/epireview/reference/date_start.html","id":null,"dir":"Reference","previous_headings":"","what":"create a date — date_start","title":"create a date — date_start","text":"create date","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/date_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a date — date_start","text":"","code":"date_start(start_day, start_month, start_year)"},{"path":"https://mrc-ide.github.io/epireview/reference/date_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a date — date_start","text":"start_day start day start_month start month start_year start year","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delay_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for delay distribution parameters in the $params table from load_epidata() — delay_key_columns","title":"Key columns for delay distribution parameters in the $params table from load_epidata() — delay_key_columns","text":"Key columns delay distribution parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delay_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for delay distribution parameters in the $params table from load_epidata() — delay_key_columns","text":"","code":"delay_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/delay_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for delay distribution parameters in the $params table from load_epidata() — delay_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delay_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table for human delay parameters — delay_table","title":"Create table for human delay parameters — delay_table","text":"Create table human delay parameters","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delay_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table for human delay parameters — delay_table","text":"","code":"delay_table(df, pathogen)"},{"path":"https://mrc-ide.github.io/epireview/reference/delay_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table for human delay parameters — delay_table","text":"df processed data parameter information produced using data_param_table() pathogen name pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delay_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create table for human delay parameters — delay_table","text":"flextable overview delay parameter estimates extracted included studies","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delay_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create table for human delay parameters — delay_table","text":"Article Country Parameter type  Delays (days) Statistic  Uncertainty type Population Group Timing survey Outcome Ajelli2012 Angola Generation Time  9.0 Mean  CI95% General population Mid outbreak  Ajelli2012 Angola Generation Time  5.4 Standard Deviation  CI95% General population Mid outbreak  Ajelli2012 Angola Generation Time  9.3 Mean  CI95% General population Mid outbreak  Martini1973 Germany,Yugoslavia Incubation Period     Range    Gear1975 South Africa Incubation Period     Range Healthcare workers Mid outbreak  Knust2015 Uganda Time Care  14.3 Mean  Range General population Post outbreak Bausch2006 Democratic Republic Congo Time Symptom Careseeking  4.5 Median  Range Mid outbreak  Gear1975 South Africa Time Symptom Careseeking  4.0   Start outbreak  Knust2015 Uganda Time Symptom Careseeking  4.0 Mean   General population   Ajelli2012 Angola Time Symptom Outcome  7.0 Median  Range General population Mid outbreak Death Ajelli2012 Angola Time Symptom Outcome  9.0 Median  Range General population Mid outbreak Death Gear1975 South Africa Time Symptom Outcome  9.0    Start outbreak Knust2015 Uganda Time Symptom Outcome  9.0 Mean  Range General population Post outbreak Death Knust2015 Uganda Time Symptom Outcome  22.0 Mean  Range General population  ","code":"df <- data_param_table(pathogen = \"marburg\", exclude = c(15, 17)) #> Rows: 70 Columns: 55 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (26): parameter_data_id, parameter_type, parameter_unit, parameter_value... #> dbl (18): article_id, parameter_value, parameter_lower_bound, parameter_uppe... #> lgl (11): distribution_type, distribution_par1_value, distribution_par1_type... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. delay_table(df = df, pathogen = \"marburg\") .cl-e88c02da{}.cl-e8848e38{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-e8848e42{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-e8875410{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-e887541a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-e8877544{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887754e{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877558{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877559{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877562{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877563{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877564{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887756c{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887756d{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877576{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877577{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877580{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877581{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887758a{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887758b{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877594{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877595{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877596{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887759e{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887759f{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775a8{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775b2{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775b3{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775b4{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775bc{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775bd{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775c6{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775c7{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775d0{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775d1{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775da{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775db{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775e4{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775e5{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775e6{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775ee{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775ef{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775f8{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775f9{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88775fa{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877602{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877603{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887760c{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877616{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877620{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877621{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887762a{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877634{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877635{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877636{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877637{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887763e{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877648{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877649{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877652{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877653{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877654{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887765c{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887765d{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887765e{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877666{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877667{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877670{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877671{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887767a{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877684{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877685{width:1.23in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e887768e{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e8877698{width:2.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776a2{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776a3{width:1.426in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776ac{width:1.762in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776ad{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776ae{width:1.776in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776b6{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-e88776b7{width:1.046in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}ArticleCountryParameter typeDelays (days)StatisticUncertainty typePopulation GroupTiming of surveyOutcomeAjelli2012AngolaGeneration Time9.0MeanCI95%General populationMid outbreakAjelli2012AngolaGeneration Time5.4Standard DeviationCI95%General populationMid outbreakAjelli2012AngolaGeneration Time9.3MeanCI95%General populationMid outbreakMartini1973Germany,YugoslaviaIncubation PeriodRangeGear1975South AfricaIncubation PeriodRangeHealthcare workersMid outbreakKnust2015UgandaTime In Care14.3MeanRangeGeneral populationPost outbreakOtherBausch2006Democratic Republic of the CongoTime Symptom To Careseeking4.5MedianRangeOtherMid outbreakGear1975South AfricaTime Symptom To Careseeking4.0OtherOtherStart outbreakKnust2015UgandaTime Symptom To Careseeking4.0MeanGeneral populationAjelli2012AngolaTime Symptom To Outcome7.0MedianRangeGeneral populationMid outbreakDeathAjelli2012AngolaTime Symptom To Outcome9.0MedianRangeGeneral populationMid outbreakDeathGear1975South AfricaTime Symptom To Outcome9.0OtherStart outbreakOtherKnust2015UgandaTime Symptom To Outcome9.0MeanRangeGeneral populationPost outbreakDeathKnust2015UgandaTime Symptom To Outcome22.0MeanRangeGeneral populationOther"},{"path":"https://mrc-ide.github.io/epireview/reference/delays_to_days.html","id":null,"dir":"Reference","previous_headings":"","what":"This function converts delays in different units (hours, weeks, months) to days. It checks if all delays are in days and warns the user if not. It then converts hours to days by dividing by 24, weeks to days by multiplying by 7, and months to days by multiplying by 30. — delays_to_days","title":"This function converts delays in different units (hours, weeks, months) to days. It checks if all delays are in days and warns the user if not. It then converts hours to days by dividing by 24, weeks to days by multiplying by 7, and months to days by multiplying by 30. — delays_to_days","text":"function converts delays different units (hours, weeks, months) days. checks delays days warns user . converts hours days dividing 24, weeks days multiplying 7, months days multiplying 30.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delays_to_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function converts delays in different units (hours, weeks, months) to days. It checks if all delays are in days and warns the user if not. It then converts hours to days by dividing by 24, weeks to days by multiplying by 7, and months to days by multiplying by 30. — delays_to_days","text":"","code":"delays_to_days(df)"},{"path":"https://mrc-ide.github.io/epireview/reference/delays_to_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function converts delays in different units (hours, weeks, months) to days. It checks if all delays are in days and warns the user if not. It then converts hours to days by dividing by 24, weeks to days by multiplying by 7, and months to days by multiplying by 30. — delays_to_days","text":"df data.frame containing delays units. typically subset parameters data frame returned load_epidata.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delays_to_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function converts delays in different units (hours, weeks, months) to days. It checks if all delays are in days and warns the user if not. It then converts hours to days by dividing by 24, weeks to days by multiplying by 7, and months to days by multiplying by 30. — delays_to_days","text":"Updated data.frame delays converted days.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/delays_to_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function converts delays in different units (hours, weeks, months) to days. It checks if all delays are in days and warns the user if not. It then converts hours to days by dividing by 24, weeks to days by multiplying by 7, and months to days by multiplying by 30. — delays_to_days","text":"","code":"df <- data.frame(parameter_value = c(24, 7, 1),                  parameter_unit = c(\"Hours\", \"Weeks\", \"Months\")) delays_to_days(df) #> ! Not all delays are in days. Other units are: hours, weeks, months #> ℹ We will attempt the following conversions: #>  #> ── hours -> days ── #>  #> 1. NA (n=) #> 2.  (n=) #>  #> ── weeks -> days ── #>  #> 1. NA (n=) #> 2.  (n=) #>   parameter_value parameter_unit #> 1               1           Days #> 2              49          Weeks #> 3              30         Months # Output: #   parameter_value parameter_unit # 1               1           Days # 2              49           Days # 3              30           Days"},{"path":"https://mrc-ide.github.io/epireview/reference/epireview-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epireview: Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG) — epireview-package","title":"epireview: Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG) — epireview-package","text":"Contains latest open access pathogen data Pathogen Epidemiology Review Group (PERG). Tools available update pathogen databases new peer-reviewed data becomes available, summarise latest data using tables figures.","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/epireview-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epireview: Tools to update and summarise the latest pathogen data from the Pathogen Epidemiology Review Group (PERG) — epireview-package","text":"Maintainer: Sangeeta Bhatia s.bhatia@imperial.ac.uk (ORCID) Authors: Rebecca Nash r.nash@imperial.ac.uk (ORCID) Christian Morgenstern c.morgenstern@imperial.ac.uk (ORCID) Cosmo Santoni cosmo.santoni@imperial.ac.uk Richard Sheppard richard.sheppard11@imperial.ac.uk Joseph Hicks j.hicks@imperial.ac.uk Gina Cuomo-Dannenburg (ORCID) Ruth McCabe (ORCID) Kelly McCain (ORCID) Joshua Lambert (ORCID) Anne Cori (ORCID) Thomas Rawson (ORCID) Patrick Doohan (ORCID) Tristan Naidoo (-12392) Shazia Ruybal-Pesántez (ORCID)","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter columns of a data frame based on specified conditions. — filter_cols","title":"Filter columns of a data frame based on specified conditions. — filter_cols","text":"function filters rows data frame based specified conditions selected columns.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter columns of a data frame based on specified conditions. — filter_cols","text":"","code":"filter_cols(x, cols, funs = c(\"in\", \"==\", \">\", \"<\"), vals)"},{"path":"https://mrc-ide.github.io/epireview/reference/filter_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter columns of a data frame based on specified conditions. — filter_cols","text":"x data frame. cols character vector specifying columns filtered. funs character vector specifying filter functions column. function must one \"\", \"==\", \">\", \"<\" quotes. vals list values used filtering columns cols.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter columns of a data frame based on specified conditions. — filter_cols","text":"data frame rows filtered based specified conditions.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter columns of a data frame based on specified conditions. — filter_cols","text":"","code":"x <- load_epidata('marburg') #> Warning: There is 1 article with missing first author surname. #> Warning: There is 1 article with missing first author surname and first author first #> name. #> Warning: There is 1 article with missing year of publication. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Warning: Unknown or uninitialised column: `other_delay_start`. #> Warning: Unknown or uninitialised column: `other_delay_end`. #> Note: the params dataframe does not have a covidence_id column #> Note: the models dataframe does not have a covidence_id column #> Note: the outbreaks dataframe does not have a covidence_id column #> ✔ Data loaded for marburg p <- x$params filter_cols(p, \"parameter_type\", \"==\", \"Attack rate\") #> # A tibble: 1 × 61 #>   parameter_data_id     article_id parameter_type parameter_value parameter_unit #>   <chr>                      <int> <chr>                    <dbl> <chr>          #> 1 aaee8bee0e1498de490f…         21 Attack rate                 21 Percentage (%) #> # ℹ 56 more variables: parameter_lower_bound <dbl>, #> #   parameter_upper_bound <dbl>, parameter_value_type <chr>, #> #   parameter_uncertainty_single_value <dbl>, #> #   parameter_uncertainty_singe_type <chr>, #> #   parameter_uncertainty_lower_value <dbl>, #> #   parameter_uncertainty_upper_value <dbl>, parameter_uncertainty_type <chr>, #> #   cfr_ifr_numerator <int>, cfr_ifr_denominator <int>, … filter_cols(p, \"parameter_type\", \"in\",    list(parameter_type = c(\"Attack rate\", \"Seroprevalence - IFA\"))) #> # A tibble: 11 × 61 #>    parameter_data_id    article_id parameter_type parameter_value parameter_unit #>    <chr>                     <int> <chr>                    <dbl> <chr>          #>  1 9b3a85f48c60fd7f46d…          5 Seroprevalenc…            NA   NA             #>  2 aaee8bee0e1498de490…         21 Attack rate               21   Percentage (%) #>  3 ce78f707a585d8bb23a…         22 Seroprevalenc…             0   Percentage (%) #>  4 ca720828fd6ccb18844…         22 Seroprevalenc…             0   NA             #>  5 61fbb9dfc021abf5bd1…         22 Seroprevalenc…             0   Percentage (%) #>  6 8cc2b414c713a0ea293…         24 Seroprevalenc…            NA   NA             #>  7 89a22c901bff8cd51e7…         43 Seroprevalenc…             0   Percentage (%) #>  8 ea4eadb1df08fcda05f…          7 Seroprevalenc…             3.2 Percentage (%) #>  9 1723916e6c477bd15e4…         55 Seroprevalenc…             0   NA             #> 10 899e4984d6c23191208…         47 Seroprevalenc…             1.3 Percentage (%) #> 11 7d1da61c69b1e13950b…          8 Seroprevalenc…             1.7 Percentage (%) #> # ℹ 56 more variables: parameter_lower_bound <dbl>, #> #   parameter_upper_bound <dbl>, parameter_value_type <chr>, #> #   parameter_uncertainty_single_value <dbl>, #> #   parameter_uncertainty_singe_type <chr>, #> #   parameter_uncertainty_lower_value <dbl>, #> #   parameter_uncertainty_upper_value <dbl>, parameter_uncertainty_type <chr>, #> #   cfr_ifr_numerator <int>, cfr_ifr_denominator <int>, …"},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metamean.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","title":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","text":"Prepare parameter dataframe meta analysis means","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metamean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","text":"","code":"filter_df_for_metamean(df)"},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metamean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","text":"df parameter dataframe. must columns following: parameter_value, parameter_unit, population_sample_size, parameter_value_type, parameter_uncertainty_singe_type, parameter_uncertainty_type, parameter_uncertainty_lower_value, parameter_uncertainty_upper_value. typically params data.frame output load_epidata.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metamean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","text":"parameter dataframe relevant rows selected additional columns added facilitate meta analysis means. additional columns : xbar, median, q1, q3, min, max.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metamean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","text":"function checks format df adequate conducting meta analysis means. filters dataframe include rows meet required format. can conduct meta analysis parameter estimates reported () mean standard deviation, (b) median interquartile range, (c) median range. function filters parameter dataframe include rows meet criteria. also checks parameter values units; sample size reported parameter value.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metamean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare parameter dataframe for meta analysis of means — filter_df_for_metamean","text":"","code":"## preparing data for meta analyses of delay from symptom onset to ## hospitalisation for Lassa  df <- load_epidata(\"lassa\")[[\"params\"]] #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for lassa o2h_df <- df[df$parameter_type %in% \"Human delay - symptom onset>admission to care\", ] o2h_df_filtered <- filter_df_for_metamean(o2h_df) #> parameter_value must be present if parameter_unit is present. 1 row with non-NA #> parameter_value and NA parameter_unit will be removed. ## o2h_df_filtered could then be used directly in meta analyses as: ## mtan <- metamean(data = o2h_df_filtered, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metaprop.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","title":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","text":"Prepare parameter dataframe meta analysis proportions","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metaprop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","text":"","code":"filter_df_for_metaprop(df, num_col, denom_col)"},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metaprop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","text":"df parameter dataframe. must columns following: parameter_value, parameter_unit, plus two columns numerator denominator proportion interest. dataframe typically params data.frame output load_epidata. num_col string specifying column name column containing numerator proportion interest. denom_col string specifying column name column containing denominator proportion interest.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metaprop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","text":"parameter dataframe relevant rows selected enable meta analysis proportions.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metaprop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","text":"function checks format df adequate conducting meta analysis proportions. filters dataframe include rows meet required format (1) removing rows denominator missing, (2) removing rows numerator column parameter value missing. numerator column missing parameter value present, numerator imputed parameter value divided 100 times denominator.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/filter_df_for_metaprop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare parameter dataframe for meta analysis of proportions — filter_df_for_metaprop","text":"","code":"## preparing data for meta analyses of CFR for Lassa  df <- load_epidata(\"lassa\")[[\"params\"]] #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for lassa cfr_df <- df[df$parameter_type %in% \"Severity - case fatality rate (CFR)\",] cfr_filtered <- filter_df_for_metaprop(cfr_df,   num_col = \"cfr_ifr_numerator\", denom_col = \"cfr_ifr_denominator\") #> parameter_value must be present if parameter_unit is present. 6 rows with #> non-NA parameter_value and NA parameter_unit will be removed. ## cfr_filtered could then be used directly in meta analyses as: ## mtan <- metaprop(data = cfr_filtered, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic forest plot — forest_plot","title":"Basic forest plot — forest_plot","text":"Basic forest plot displays central estimate uncertainty parameter different studies. y-axis lists study labels x-axis displays parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic forest plot — forest_plot","text":"","code":"forest_plot(   df,   facet_by = NA,   shape_by = NA,   col_by = NA,   shp_palette = NULL,   col_palette = NULL,   unique_label = NA )"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic forest plot — forest_plot","text":"df data frame containing data forest plot. data.frame following fields: article, label, mid, low, high field 'y' mapped y-axis 'article_label' used display label. mid refers central estimate. low high represent lower higher ends uncertainty interval facet_by (Optional) Variable facet plot . shape_by (Optional) Variable shape points . col_by (Optional) Variable color points . shp_palette (Optional) Palette shaping points. Optional unless shape_by one 'parameter_value_type'. col_palette Palette coloring points. Optional unless col_by one 'parameter_type' 'population_country'. unique_label (Optional) User can provide custom labels forest plot y-axis. Must match length dataframe.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic forest plot — forest_plot","text":"ggplot2 object representing forest plot.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic forest plot — forest_plot","text":"Generates forest plot. function generates forest plot using provided data frame. epireview provides default palette parameters countries. wish color different variable, must provide palette.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic forest plot — forest_plot","text":"","code":"df <- data.frame(   mid = c(1, 2, 3),   article_label = c(\"A\", \"B\", \"C\"),   low = c(0.5, 1.5, 2.5),   high = c(1.5, 2.5, 3.5),   uncertainty_type = c(\"Range\", \"Range\", \"Range**\") ) forest_plot(df)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_delay_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Create forest plot for human delays — forest_plot_delay_int","title":"Create forest plot for human delays — forest_plot_delay_int","text":"Create forest plot human delays","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_delay_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create forest plot for human delays — forest_plot_delay_int","text":"","code":"forest_plot_delay_int(df, ulim, reorder_studies, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_delay_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create forest plot for human delays — forest_plot_delay_int","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Additional arguments passed forest_plot function.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_delay_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create forest plot for human delays — forest_plot_delay_int","text":"returns plot summary human delays","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_delay_int.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create forest plot for human delays — forest_plot_delay_int","text":"number 'delays' relevant pathogens study. commonly, hence likely extracted pathogens, infectious period, incubation period, serial interval. However, many others reported relatively studies relevant pathogens. function intended serve template creating forest plots delays. first reparameterise delays reported terms gamma distribution mean standard deviation (see reparam_gamma). , parameters reported inverse (e.g., per day instead days) inverted (see invert_inverse_params). Finally, delays converted days (see delays_to_days) reordering studies (requested) plotting forest plot. also provide utility functions commonly used delays simply wrapper function. however interested delay, need use function directly, ensuring data frame provide relevant delays.","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_doubling_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Forest plot for doubling time — forest_plot_doubling_time","title":"Forest plot for doubling time — forest_plot_doubling_time","text":"function calculates doubling time creates forest plot visualize results.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_doubling_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest plot for doubling time — forest_plot_doubling_time","text":"","code":"forest_plot_doubling_time(df, ulim = 30, reorder_studies = TRUE, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_doubling_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest plot for doubling time — forest_plot_doubling_time","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Additional arguments passed forest_plot function.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_doubling_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest plot for doubling time — forest_plot_doubling_time","text":"forest plot object.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_doubling_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forest plot for doubling time — forest_plot_doubling_time","text":"","code":"df <- load_epidata(\"ebola\")[[\"params\"]] #> ℹ ebola does not have any extracted outbreaks  #> information. Outbreaks will be set to NULL. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for ebola forest_plot_doubling_time(df, ulim = 20, reorder_studies = TRUE) #> Warning: The maximum doubling time is 61 ; the ulim is set to 20 . Some points may not #> be plotted. Consider increasing ulim. #> Warning: No parameters to invert. #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_incubation_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Create forest plot for incubation period — forest_plot_incubation_period","title":"Create forest plot for incubation period — forest_plot_incubation_period","text":"Create forest plot incubation period","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_incubation_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create forest plot for incubation period — forest_plot_incubation_period","text":"","code":"forest_plot_incubation_period(df, ulim = 30, reorder_studies = TRUE, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_incubation_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create forest plot for incubation period — forest_plot_incubation_period","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Additional arguments passed forest_plot function.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_incubation_period.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create forest plot for incubation period — forest_plot_incubation_period","text":"function wrapper forest_plot_delay_int specifically incubation period.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_infectious_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Create forest plot for infectious period — forest_plot_infectious_period","title":"Create forest plot for infectious period — forest_plot_infectious_period","text":"Create forest plot infectious period","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_infectious_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create forest plot for infectious period — forest_plot_infectious_period","text":"","code":"forest_plot_infectious_period(df, ulim = 30, reorder_studies = TRUE, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_infectious_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create forest plot for infectious period — forest_plot_infectious_period","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Additional arguments passed forest_plot function.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_infectious_period.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create forest plot for infectious period — forest_plot_infectious_period","text":"function wrapper forest_plot_delay_int specifically infectious period.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_r0.html","id":null,"dir":"Reference","previous_headings":"","what":"forest_plot_r0 function — forest_plot_r0","title":"forest_plot_r0 function — forest_plot_r0","text":"function generates forest plot reproduction number (Basic R0) using provided data frame.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_r0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"forest_plot_r0 function — forest_plot_r0","text":"","code":"forest_plot_r0(df, ulim = 10, reorder_studies = TRUE, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_r0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"forest_plot_r0 function — forest_plot_r0","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Arguments passed forest_plot_rt","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_r0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"forest_plot_r0 function — forest_plot_r0","text":"ggplot2 object.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_r0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"forest_plot_r0 function — forest_plot_r0","text":"","code":"df <- load_epidata(\"ebola\")[[\"params\"]] #> ℹ ebola does not have any extracted outbreaks  #> information. Outbreaks will be set to NULL. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for ebola forest_plot_r0(df, ulim = 2.5, reorder_studies = TRUE) #> Warning: The maximum basic reproduction number is 10 ; the ulim is set to 2.5 . Some #> points may not be plotted. Consider increasing ulim. #> Warning: Removed 22 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_rt.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a forest plot for effective reproduction number (Rt) — forest_plot_rt","title":"Generate a forest plot for effective reproduction number (Rt) — forest_plot_rt","text":"function generates forest plot effective reproduction number (Rt) using provided data frame.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a forest plot for effective reproduction number (Rt) — forest_plot_rt","text":"","code":"forest_plot_rt(df, ulim = 10, reorder_studies = TRUE, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_rt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a forest plot for effective reproduction number (Rt) — forest_plot_rt","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Additional arguments passed forest_plot function.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_rt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a forest plot for effective reproduction number (Rt) — forest_plot_rt","text":"ggplot2 object representing forest plot effective reproduction number (Rt).","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_rt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a forest plot for effective reproduction number (Rt) — forest_plot_rt","text":"","code":"df <- load_epidata(\"ebola\")[[\"params\"]] #> ℹ ebola does not have any extracted outbreaks  #> information. Outbreaks will be set to NULL. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for ebola forest_plot_rt(df) #> Warning: Removed 24 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_serial_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Create forest plot for serial interval — forest_plot_serial_interval","title":"Create forest plot for serial interval — forest_plot_serial_interval","text":"Create forest plot serial interval","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_serial_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create forest plot for serial interval — forest_plot_serial_interval","text":"","code":"forest_plot_serial_interval(df, ulim = 30, reorder_studies = TRUE, ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_serial_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create forest plot for serial interval — forest_plot_serial_interval","text":"df data frame containing necessary data generating forest plot. ulim upper limit x-axis plot. Default 10. reorder_studies Logical. TRUE, studies reordered using reorder_studies function. Default TRUE. ... Additional arguments passed forest_plot function.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/forest_plot_serial_interval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create forest plot for serial interval — forest_plot_serial_interval","text":"function wrapper forest_plot_delay_int specifically serial interval.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/genomic_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for genomic parameters in the $params table from load_epidata() — genomic_key_columns","title":"Key columns for genomic parameters in the $params table from load_epidata() — genomic_key_columns","text":"Key columns genomic parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/genomic_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for genomic parameters in the $params table from load_epidata() — genomic_key_columns","text":"","code":"genomic_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/genomic_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for genomic parameters in the $params table from load_epidata() — genomic_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset the epidemiological parameter columns by parameter type — get_key_columns","title":"Subset the epidemiological parameter columns by parameter type — get_key_columns","text":"Subset epidemiological parameter columns parameter type","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset the epidemiological parameter columns by parameter type — get_key_columns","text":"","code":"get_key_columns(   data,   parameter_name = c(\"cfr\", \"delays\", \"sero\", \"risk_factors\", \"reproduction_number\",     \"genomic\", \"attack_rate\", \"doubling_time\", \"growth_rate\", \"overdispersion\",     \"relative_contribution\"),   all_columns = FALSE )"},{"path":"https://mrc-ide.github.io/epireview/reference/get_key_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset the epidemiological parameter columns by parameter type — get_key_columns","text":"data parameter data.frame ($param) load_epidata(). parameter_name character string parameter name. Options : \"cfr\", \"delay\", \"sero\", \"risk\", \"reproduction_number\", \"genomic\". all_columns default FALSE meaning key columns specified specific parameter retrieved. TRUE, columns data.frame retrieved.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset the epidemiological parameter columns by parameter type — get_key_columns","text":"data.frame key columns selected parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_key_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset the epidemiological parameter columns by parameter type — get_key_columns","text":"","code":"lassa_data <- load_epidata(\"lassa\") #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for lassa lassa_params <- lassa_data$params cfr_lassa <- get_parameter(   data = lassa_params,   parameter_name = \"Severity - case fatality rate (CFR)\" ) get_key_columns(data = cfr_lassa, parameter_name = \"cfr\") #> # A tibble: 85 × 12 #>    article_label      article_info     population_country population_sample_size #>    <chr>              <chr>            <chr>                               <int> #>  1 PA 1986            PA 1986 (Transa… Sierra Leone                          225 #>  2 J. 1998            J. 1998 (Journa… Guinea                                 12 #>  3 Nathan Y 2018      10.3389/fpubh.2… Nigeria                                11 #>  4 Jeffrey 2014       10.1371/journal… Sierra Leone                         1740 #>  5 Prerana 2015       10.4269/ajtmh.1… Sierra Leone                           21 #>  6 Michael E 1988 (1) Michael E 1988 … Sierra Leone                           68 #>  7 Michael E 1988 (2) Michael E 1988 … Sierra Leone                           79 #>  8 H. 1972            H. 1972 (Transa… Nigeria                                23 #>  9 Peter 2018         10.1016/S1473-3… Nigeria                               284 #> 10 J. 1980            J. 1980 (Tropen… Guinea, Liberia, …                     42 #> # ℹ 75 more rows #> # ℹ 8 more variables: population_sample_type <chr>, population_group <chr>, #> #   method_disaggregated <lgl>, parameter_type <chr>, parameter_value <dbl>, #> #   cfr_ifr_numerator <int>, cfr_ifr_denominator <int>, cfr_ifr_method <chr>"},{"path":"https://mrc-ide.github.io/epireview/reference/get_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"retrieve all parameters of specified type or class — get_parameter","title":"retrieve all parameters of specified type or class — get_parameter","text":"retrieve parameters specified type class","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrieve all parameters of specified type or class — get_parameter","text":"","code":"get_parameter(data, parameter_name)"},{"path":"https://mrc-ide.github.io/epireview/reference/get_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrieve all parameters of specified type or class — get_parameter","text":"data parameter dataframe output load_epidata parameter_name name parameter type parameter class retrieve, ensuring name matches data","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retrieve all parameters of specified type or class — get_parameter","text":"dataframe parameter estimates columns","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"retrieve all parameters of specified type or class — get_parameter","text":"","code":"df <- load_epidata(pathogen = \"ebola\") #> ℹ ebola does not have any extracted outbreaks  #> information. Outbreaks will be set to NULL. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for ebola get_parameter(data = df$params, parameter_name = \"Human delay - serial interval\") #> # A tibble: 19 × 78 #>    id     parameter_data_id covidence_id pathogen parameter_type parameter_value #>    <chr>  <chr>                    <int> <chr>    <chr>                    <dbl> #>  1 f49a9… 466f684ff8286fbd…          506 Ebola v… Human delay -…            12   #>  2 c1e68… cb37cc4599953d47…         1471 Ebola v… Human delay -…            19.4 #>  3 08e06… 20eb9e7d7714183c…         1876 Ebola v… Human delay -…            11   #>  4 5a250… 115c169147af31f7…         1891 Ebola v… Human delay -…            11.1 #>  5 54159… 6fca288e3bca7dc0…         3138 Ebola v… Human delay -…            16.1 #>  6 f044b… 89e334ec3622ed27…         3776 Ebola v… Human delay -…            14   #>  7 df908… e62da97ac8648211…         4966 Ebola v… Human delay -…            14.2 #>  8 df908… d46ff8b0c2ff67b7…         4966 Ebola v… Human delay -…             7.1 #>  9 1b9d9… abb8b6aabf43ac86…         5924 Ebola v… Human delay -…            13.7 #> 10 39354… 2b270d400af4fcce…         5939 Ebola v… Human delay -…            NA   #> 11 39354… 8a18cde4823cf9f7…         5939 Ebola v… Human delay -…            NA   #> 12 39354… 10f3384f1550a778…         5939 Ebola v… Human delay -…            NA   #> 13 50dea… 631ec65830a82fbe…         6346 Ebola v… Human delay -…            15.3 #> 14 86e39… 5c8d68c39d1c3b98…        15896 Ebola v… Human delay -…            15.3 #> 15 40a29… 7f4ab651c48511df…        17077 Ebola v… Human delay -…            15.3 #> 16 b76dc… 0c3e02f80addfccc…        17730 Ebola v… Human delay -…            12   #> 17 b76dc… c2e0739d6bc652e9…        17730 Ebola v… Human delay -…            11.7 #> 18 74b62… e2a59f5aa40ddbdf…        18536 Ebola v… Human delay -…            12.3 #> 19 66e1b… 4da557e3c2c22a10…        19083 Ebola v… Human delay -…            NA   #> # ℹ 72 more variables: exponent <dbl>, parameter_unit <chr>, #> #   parameter_lower_bound <dbl>, parameter_upper_bound <dbl>, #> #   parameter_value_type <chr>, parameter_uncertainty_single_value <dbl>, #> #   parameter_uncertainty_singe_type <chr>, #> #   parameter_uncertainty_lower_value <dbl>, #> #   parameter_uncertainty_upper_value <dbl>, parameter_uncertainty_type <chr>, #> #   cfr_ifr_numerator <int>, cfr_ifr_denominator <int>, … df <- load_epidata(pathogen = \"marburg\") #> Warning: There is 1 article with missing first author surname. #> Warning: There is 1 article with missing first author surname and first author first #> name. #> Warning: There is 1 article with missing year of publication. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Warning: Unknown or uninitialised column: `other_delay_start`. #> Warning: Unknown or uninitialised column: `other_delay_end`. #> Note: the params dataframe does not have a covidence_id column #> Note: the models dataframe does not have a covidence_id column #> Note: the outbreaks dataframe does not have a covidence_id column #> ✔ Data loaded for marburg get_parameter(data = df$params, parameter_name = \"Attack rate\") #> # A tibble: 1 × 61 #>   parameter_data_id     article_id parameter_type parameter_value parameter_unit #>   <chr>                      <int> <chr>                    <dbl> <chr>          #> 1 aaee8bee0e1498de490f…         21 Attack rate                 21 Percentage (%) #> # ℹ 56 more variables: parameter_lower_bound <dbl>, #> #   parameter_upper_bound <dbl>, parameter_value_type <chr>, #> #   parameter_uncertainty_single_value <dbl>, #> #   parameter_uncertainty_singe_type <chr>, #> #   parameter_uncertainty_lower_value <dbl>, #> #   parameter_uncertainty_upper_value <dbl>, parameter_uncertainty_type <chr>, #> #   cfr_ifr_numerator <int>, cfr_ifr_denominator <int>, …"},{"path":"https://mrc-ide.github.io/epireview/reference/get_specific.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all incubation period parameters for a given pathogen — get_specific","title":"Retrieve all incubation period parameters for a given pathogen — get_specific","text":"Retrieve incubation period parameters given pathogen Retrieve serial interval estimates given pathogen Retrieve generation time estimates given pathogen Retrieve delay parameters given pathogen Retrieve CFR parameters given pathogen Retrieve risk factor parameters given pathogen Retrieve genomic parameters given pathogen Retrieve reproduction number parameters given pathogen Retrieve seroprevalence parameters given pathogen Retrieve doubling time parameters given pathogen Retrieve attack rate parameters given pathogen Retrieve growth rate parameters given pathogen Retrieve overdispersion parameters given pathogen Retrieve overdispersion parameters given pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_specific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all incubation period parameters for a given pathogen — get_specific","text":"","code":"get_incubation_period(data, all_columns)  get_serial_interval(data, all_columns)  get_generation_time(data, all_columns)  get_delays(data, all_columns)  get_cfr(data, all_columns)  get_risk_factors(data, all_columns)  get_genomic(data, all_columns)  get_reproduction_number(data, all_columns)  get_seroprevalence(data, all_columns)  get_doubling_time(data, all_columns)  get_attack_rate(data, all_columns)  get_growth_rate(data, all_columns)  get_overdispersion(data, all_columns)  get_relative_contribution(data, all_columns)"},{"path":"https://mrc-ide.github.io/epireview/reference/get_specific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve all incubation period parameters for a given pathogen — get_specific","text":"data parameter dataframe output load_epidata all_columns default FALSE meaning key columns specified specific parameter retrieved. TRUE, columns data.frame retrieved.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_specific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all incubation period parameters for a given pathogen — get_specific","text":"dataframe parameter estimates type key columns (see get_key_columns)","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_specific.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve all incubation period parameters for a given pathogen — get_specific","text":"","code":"df <- load_epidata(pathogen = \"lassa\") #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for lassa get_incubation_period(data = df$params, all_columns = FALSE) #> # A tibble: 5 × 15 #>   article_label  article_info          population_country population_sample_size #>   <chr>          <chr>                 <chr>                               <int> #> 1 John D. 1970   John D. 1970 (Americ… Nigeria                                 3 #> 2 N.A. 2013      10.1016/j.ijid.2013.… Nigeria                                20 #> 3 Andrei R. 2019 10.1098/rstb.2018.02… Nigeria                                NA #> 4 A 2019         A 2019 (Annals Of Me… Nigeria                                62 #> 5 P. E. 1973     10.4269/ajtmh.1973.2… Liberia                                11 #> # ℹ 11 more variables: population_sample_type <chr>, population_group <chr>, #> #   method_disaggregated <lgl>, parameter_type <chr>, parameter_value <dbl>, #> #   parameter_unit <chr>, distribution_type <chr>, #> #   distribution_par1_value <dbl>, distribution_par2_value <dbl>, #> #   other_delay_start <chr>, other_delay_end <chr>"},{"path":"https://mrc-ide.github.io/epireview/reference/get_table_field_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to obtain available fields in a specified table — get_table_field_options","title":"Utility to obtain available fields in a specified table — get_table_field_options","text":"Note: need extended pathogens added","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_table_field_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to obtain available fields in a specified table — get_table_field_options","text":"","code":"get_table_field_options(   pathogen,   table = c(\"model\", \"parameter\", \"outbreak\", \"article\"),   field = \"all\" )"},{"path":"https://mrc-ide.github.io/epireview/reference/get_table_field_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to obtain available fields in a specified table — get_table_field_options","text":"pathogen name pathogen. Must one priority pathogens can get list priority pathogens currently included package calling function priority_pathogens. table table loaded. Must one \"article\", \"parameter\", \"outbreak\", \"model\" field can either \"\" return fields specified table_type, specific variable name user wants return","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_table_field_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to obtain available fields in a specified table — get_table_field_options","text":"data specified table_type field","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/get_table_field_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to obtain available fields in a specified table — get_table_field_options","text":"","code":"get_table_field_options(                        pathogen = \"marburg\", \"model\",                        field = \"all\") #> # A tibble: 11 × 6 #>    `Model type`   Stochastic or determ…¹ `Transmission route` `Compartment type` #>    <chr>          <chr>                  <chr>                <chr>              #>  1 \"Compartmenta… \"Stochastic\"           \"Airborne or close … \"SIS\"              #>  2 \"Branching pr… \"Deterministic\"        \"Human to human (di… \"SIR\"              #>  3 \"Agent / Indi… \"\"                     \"Vector to human\"    \"SEIR\"             #>  4 \"Other\"        \"\"                     \"Animal reservoir t… \"Other compartmen… #>  5 \"Unspecified\"  \"\"                     \"Sexual\"             \"Not compartmenta… #>  6 \"\"             \"\"                     \"Unspecified\"        \"\"                 #>  7 \"\"             \"\"                     \"\"                   \"\"                 #>  8 \"\"             \"\"                     \"\"                   \"\"                 #>  9 \"\"             \"\"                     \"\"                   \"\"                 #> 10 \"\"             \"\"                     \"\"                   \"\"                 #> 11 \"\"             \"\"                     \"\"                   \"\"                 #> # ℹ abbreviated name: ¹​`Stochastic or deterministic` #> # ℹ 2 more variables: Assumptions <chr>, Interventions <chr>  get_table_field_options(pathogen = \"marburg\", \"model\",                         field = \"Model type\") #> # A tibble: 5 × 1 #>   `Model type`             #>   <chr>                    #> 1 Compartmental            #> 2 Branching process        #> 3 Agent / Individual based #> 4 Other                    #> 5 Unspecified               get_table_field_options(pathogen = \"marburg\", \"parameter\",                         field = \"Reproduction number method\") #> # A tibble: 8 × 1 #>   `Reproduction number method`          #>   <chr>                                 #> 1 Renewal equations / Branching process #> 2 Growth rate                           #> 3 Compartmental model                   #> 4 Next generation matrix                #> 5 Empirical (contact tracing)           #> 6 Genomics                              #> 7 Other                                 #> 8 Unspecified"},{"path":"https://mrc-ide.github.io/epireview/reference/invert_inverse_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverts the values of selected parameters in a data frame. Sometimes parameters are reported in inverse form (e.g., a delay might be reported as per day instead of days). Here we carry out a very simple transformation to convert these to the correct form by inverting the parameter value and the uncertainty bounds. This may not be appropriate in all cases, and must be checked on a case-by-case basis. This function takes a data frame as input and inverts the values of selected parameters. The selected parameters are identified by the column 'inverse_param'. The function performs the following operations:  Inverts the parameter values of the selected parameters. Swaps the upper and lower bounds of the selected parameters. Inverts the uncertainty values of the selected parameters. Updates the logical vector to indicate that the parameters are no longer inverted. Does not change the unit of the parameters, as it remains the same as the original parameter.  — invert_inverse_params","title":"Inverts the values of selected parameters in a data frame. Sometimes parameters are reported in inverse form (e.g., a delay might be reported as per day instead of days). Here we carry out a very simple transformation to convert these to the correct form by inverting the parameter value and the uncertainty bounds. This may not be appropriate in all cases, and must be checked on a case-by-case basis. This function takes a data frame as input and inverts the values of selected parameters. The selected parameters are identified by the column 'inverse_param'. The function performs the following operations:  Inverts the parameter values of the selected parameters. Swaps the upper and lower bounds of the selected parameters. Inverts the uncertainty values of the selected parameters. Updates the logical vector to indicate that the parameters are no longer inverted. Does not change the unit of the parameters, as it remains the same as the original parameter.  — invert_inverse_params","text":"Inverts values selected parameters data frame. Sometimes parameters reported inverse form (e.g., delay might reported per day instead days). carry simple transformation convert correct form inverting parameter value uncertainty bounds. may appropriate cases, must checked case--case basis. function takes data frame input inverts values selected parameters. selected parameters identified column 'inverse_param'. function performs following operations: Inverts parameter values selected parameters. Swaps upper lower bounds selected parameters. Inverts uncertainty values selected parameters. Updates logical vector indicate parameters longer inverted. change unit parameters, remains original parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/invert_inverse_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverts the values of selected parameters in a data frame. Sometimes parameters are reported in inverse form (e.g., a delay might be reported as per day instead of days). Here we carry out a very simple transformation to convert these to the correct form by inverting the parameter value and the uncertainty bounds. This may not be appropriate in all cases, and must be checked on a case-by-case basis. This function takes a data frame as input and inverts the values of selected parameters. The selected parameters are identified by the column 'inverse_param'. The function performs the following operations:  Inverts the parameter values of the selected parameters. Swaps the upper and lower bounds of the selected parameters. Inverts the uncertainty values of the selected parameters. Updates the logical vector to indicate that the parameters are no longer inverted. Does not change the unit of the parameters, as it remains the same as the original parameter.  — invert_inverse_params","text":"","code":"invert_inverse_params(df)"},{"path":"https://mrc-ide.github.io/epireview/reference/invert_inverse_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverts the values of selected parameters in a data frame. Sometimes parameters are reported in inverse form (e.g., a delay might be reported as per day instead of days). Here we carry out a very simple transformation to convert these to the correct form by inverting the parameter value and the uncertainty bounds. This may not be appropriate in all cases, and must be checked on a case-by-case basis. This function takes a data frame as input and inverts the values of selected parameters. The selected parameters are identified by the column 'inverse_param'. The function performs the following operations:  Inverts the parameter values of the selected parameters. Swaps the upper and lower bounds of the selected parameters. Inverts the uncertainty values of the selected parameters. Updates the logical vector to indicate that the parameters are no longer inverted. Does not change the unit of the parameters, as it remains the same as the original parameter.  — invert_inverse_params","text":"df data frame containing parameters inverted.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/invert_inverse_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverts the values of selected parameters in a data frame. Sometimes parameters are reported in inverse form (e.g., a delay might be reported as per day instead of days). Here we carry out a very simple transformation to convert these to the correct form by inverting the parameter value and the uncertainty bounds. This may not be appropriate in all cases, and must be checked on a case-by-case basis. This function takes a data frame as input and inverts the values of selected parameters. The selected parameters are identified by the column 'inverse_param'. The function performs the following operations:  Inverts the parameter values of the selected parameters. Swaps the upper and lower bounds of the selected parameters. Inverts the uncertainty values of the selected parameters. Updates the logical vector to indicate that the parameters are no longer inverted. Does not change the unit of the parameters, as it remains the same as the original parameter.  — invert_inverse_params","text":"input data frame selected parameters inverted.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/invert_inverse_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverts the values of selected parameters in a data frame. Sometimes parameters are reported in inverse form (e.g., a delay might be reported as per day instead of days). Here we carry out a very simple transformation to convert these to the correct form by inverting the parameter value and the uncertainty bounds. This may not be appropriate in all cases, and must be checked on a case-by-case basis. This function takes a data frame as input and inverts the values of selected parameters. The selected parameters are identified by the column 'inverse_param'. The function performs the following operations:  Inverts the parameter values of the selected parameters. Swaps the upper and lower bounds of the selected parameters. Inverts the uncertainty values of the selected parameters. Updates the logical vector to indicate that the parameters are no longer inverted. Does not change the unit of the parameters, as it remains the same as the original parameter.  — invert_inverse_params","text":"","code":"df <- data.frame(parameter_value = c(2, 3, 4),                  parameter_upper_bound = c(5, 6, 7),                  parameter_lower_bound = c(1, 2, 3),                  parameter_uncertainty_upper_value = c(0.1, 0.2, 0.3),                  parameter_uncertainty_lower_value = c(0.4, 0.5, 0.6),                  inverse_param = c(FALSE, TRUE, FALSE)) invert_inverse_params(df) #>   parameter_value parameter_upper_bound parameter_lower_bound #> 1       2.0000000                   5.0             1.0000000 #> 2       0.3333333                   0.5             0.1666667 #> 3       4.0000000                   7.0             3.0000000 #>   parameter_uncertainty_upper_value parameter_uncertainty_lower_value #> 1                               0.1                               0.4 #> 2                               2.0                               5.0 #> 3                               0.3                               0.6 #>   inverse_param #> 1         FALSE #> 2         FALSE #> 3         FALSE # Output:"},{"path":"https://mrc-ide.github.io/epireview/reference/key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns across all parameters in the $params table from load_epidata() — key_columns","title":"Key columns across all parameters in the $params table from load_epidata() — key_columns","text":"Key columns across parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns across all parameters in the $params table from load_epidata() — key_columns","text":"","code":"key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns across all parameters in the $params table from load_epidata() — key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve pathogen-specific data — load_epidata","title":"Retrieve pathogen-specific data — load_epidata","text":"Retrieve pathogen-specific data","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve pathogen-specific data — load_epidata","text":"","code":"load_epidata(pathogen, mark_multiple = TRUE)"},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve pathogen-specific data — load_epidata","text":"pathogen name pathogen. Must one priority pathogens can get list priority pathogens currently included package calling function priority_pathogens. mark_multiple logical. TRUE, multiple studies author year marked suffix distinguish .","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve pathogen-specific data — load_epidata","text":"list length 4. first element data.frame called \"articles\" contains information articles extracted pathogen. second element data.frame called \"params\" articles information (authors, publication year, doi) combined parameters. third element data.frame called \"models\" transmission models extracted pathogen including articles information . fourth element data.frame called \"outbreaks\" contains outbreaks extracted pathogen, available.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve pathogen-specific data — load_epidata","text":"data extracted systematic review stored three files - one articles, parameters, transmission models. Data three files can linked using article identifier. function read pathogen-specific articles parameters files join data.frame. function also creates user-friendly short labels \"parameter_type\" column params data.frame. See short_parameter_type details.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads raw data for a particular pathogen — load_epidata_raw","title":"Loads raw data for a particular pathogen — load_epidata_raw","text":"Loads raw data particular pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads raw data for a particular pathogen — load_epidata_raw","text":"","code":"load_epidata_raw(   pathogen,   table = c(\"article\", \"parameter\", \"outbreak\", \"model\", \"param_name\") )"},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads raw data for a particular pathogen — load_epidata_raw","text":"pathogen name pathogen. Must one priority pathogens can get list priority pathogens currently included package calling function priority_pathogens. table table loaded. Must one \"article\", \"parameter\", \"outbreak\", \"model\"","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads raw data for a particular pathogen — load_epidata_raw","text":"data.frame reading csv specified pathogen table","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loads raw data for a particular pathogen — load_epidata_raw","text":"function return raw data data.frame. csv files models, outbreaks, parameters pathogen contain information source \"article_id\" can used merge articles. wish retrieve linked information multiple tables time, use load_epidata instead.","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/load_epidata_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads raw data for a particular pathogen — load_epidata_raw","text":"","code":"load_epidata_raw(pathogen = \"marburg\", table = \"outbreak\") #> # A tibble: 23 × 24 #>    outbreak_id article_id outbreak_start_day outbreak_start_month #>    <chr>            <int>              <dbl> <chr>                #>  1 4                   20                 NA Aug                  #>  2 5                   23                 18 Aug                  #>  3 6                   23                 18 Oct                  #>  4 7                   21                 NA Oct                  #>  5 10                  33                 NA NA                   #>  6 12                  42                 NA Jul                  #>  7 13                  45                 NA Oct                  #>  8 14                  49                 10 Jun                  #>  9 17                  57                 NA Oct                  #> 10 19                  60                 12 Feb                  #> # ℹ 13 more rows #> # ℹ 20 more variables: outbreak_start_year <dbl>, outbreak_end_day <dbl>, #> #   outbreak_end_month <chr>, outbreak_date_year <dbl>, #> #   outbreak_duration_months <dbl>, outbreak_size <dbl>, #> #   asymptomatic_transmission <lgl>, outbreak_country <chr>, #> #   outbreak_location <chr>, cases_confirmed <dbl>, cases_mode_detection <chr>, #> #   cases_suspected <int>, cases_asymptomatic <int>, deaths <int>, …"},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure that each article gets a unique id across all tables — make_unique_id","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"Ensure article gets unique id across tables","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"","code":"make_unique_id(articles, df, df_name)"},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"articles dataframe articles table df dataframe table needs checked duplicate covidence ids. articles df loaded load_epidata df_name name df loaded load_epidata. useful improving user","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"dataframe structure df, unique ids covidence id.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"instances, article associated one id parameters, models, outbreaks tables. can lead unexpected failures use id join articles dataframes. section resolve issue first checking covidence id mapped one id. , replace one two ensuring id used across articles, models, outbreaks, parameters. function expected used directly user, called load_epidata. Hence checks arguments implemented.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":"need-for-article-ids","dir":"Reference","previous_headings":"","what":"Need for article ids","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"need article ids first place? use covidence id? ease process data extraction, created separate database extractor, goal merging databases single database. Within individual databse, different dataframes linked Access generated primary keys. keys unique database, unique across databases. merge databases, therefore generate unique id article using random_id. Note use covidence id merging tables within database covidence id present articles table.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/make_unique_id.html","id":"why-does-an-article-end-up-with-multiple-ids-","dir":"Reference","previous_headings":"","what":"Why does an article end up with multiple ids?","title":"Ensure that each article gets a unique id across all tables — make_unique_id","text":"Articles extracted two extractors multiple ids. principle, problem, extractors resolve differences data extracted, generate consensus entry deleting one entries one two ids enter back database resolved entries merged rest data. However, practice, resolving conflicts multiple parameters models, extractors may delete row Id1 one case row Id2 another case. can lead article multiple ids parameters, models, outbreaks. article double extracted aasigned two ids, also possible retained id articles retained id parameters, models, outbreaks. can lead rows parameters, models, outbreaks linked article.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_article.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on the articles identified and included in the systematic review of articles related to Marburg virus disease. — marburg_article","title":"Data on the articles identified and included in the systematic review of articles related to Marburg virus disease. — marburg_article","text":"data set provides details extracted articles included systematic review Marburg virus disease (MVD).","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_article.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on the articles identified and included in the systematic review of articles related to Marburg virus disease. — marburg_article","text":"csv file containing following parameters: \"article_id\" = ID variable article. \"pathogen\" = pathogen name. \"covidence_id\" = article identifier used Imperial team. \"first_author_first_name\" = first author first name initials. \"article_title\" = title article. \"doi\" = doi article. \"journal\" = journal article published . \"year_publication\" = year article publication. \"volume\" = journal volume. \"issue\" = journal issue. \"page_first\" = first page number. \"page_last\" = last page number. \"paper_copy_only\" = article available online. \"notes\" = notes extractor made. \"first_author_surname\" = surname first author. \"double_extracted\" = either single extracted (0) double extracted (1). \"qa_m1\" = quality assessment: \"methodological/statistical approach suitable? Q1. Clear reproducible?\" (either 0, 1, NA) \"qa_m2\" = quality assessment: \"methodological/statistical approach suitable? Q2. Robust appropriate aim?\" (either 0, 1, NA) \"qa_a3\" = quality assessment: \"assumptions appropriate? Q3. Clear reproducible?\" (either 0, 1, NA) \"qa_a4\" = quality assessment: \"assumptions appropriate? Q4. Justified?\" (either 0, 1, NA) \"qa_d5\" = quality assessment: \"data appropriate selected methodological approach? Q5. Clearly described reproducible?\" (either 0, 1, NA) \"qa_d6\" = quality assessment: \"issues data... Q6. Clearly discussed acknowledged?\" (either 0, 1, NA) \"qa_d7\" = quality assessment: \"issues data... Q7. Accounted chosen methodological approach?\" (either 0, 1, NA) \"score\" = overall quality assessment score.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_article.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on the articles identified and included in the systematic review of articles related to Marburg virus disease. — marburg_article","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropdown menu options for model extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_models","title":"Dropdown menu options for model extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_models","text":"data set provides dropdown menu options extractors extracting data mathematical models applied MVD.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dropdown menu options for model extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_models","text":"csv file containing dropdown options : Model type Stochastic deterministic Transmission route Compartment type Assumptions Interventions","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_models.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dropdown menu options for model extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_models","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_outbreaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropdown menu options for outbreak extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_outbreaks","title":"Dropdown menu options for outbreak extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_outbreaks","text":"data set provides dropdown menu options extractors extracting outbreak data MVD.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_outbreaks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dropdown menu options for outbreak extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_outbreaks","text":"csv file containing dropdown options : Outbreak country Detection mode","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_outbreaks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dropdown menu options for outbreak extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_outbreaks","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Dropdown menu options for parameter extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_parameters","title":"Dropdown menu options for parameter extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_parameters","text":"data set provides dropdown menu options extractors extracting parameter data MVD.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_parameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dropdown menu options for parameter extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_parameters","text":"csv file containing dropdown options : Population Country Parameter type Units Parameter uncertainty - single type Parameter uncertainty - paired type Distribution type Distribution parameter 1 - type Distribution parameter 2 - type Disaggregated Sex Setting Group Timing Reproduction number method Time Time IFR_CFR_method Riskfactor outcome Riskfactor name Riskfactor occupation Riskfactor significant Riskfactor adjusted","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_dropdown_parameters.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dropdown menu options for parameter extractions in the systematic review of articles related to Marburg virus disease (MVD). — marburg_dropdown_parameters","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on the models identified in the systematic review of articles related to Marburg virus disease. — marburg_model","title":"Data on the models identified in the systematic review of articles related to Marburg virus disease. — marburg_model","text":"data set provides extracted data mathematical models applied Marburg virus disease (MVD).","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on the models identified in the systematic review of articles related to Marburg virus disease. — marburg_model","text":"csv file containing following parameters: model_data_id = ID variable model. article_id = ID variable article model came . model_type = whether model compartmental, branching process, agent/individual based, , unspecified. compartmental_type = model compartmental, whether model SIS, SIR, SEIR, \"\". stoch_deter = whether article specified whether model stochastic, deterministic, . theoretical_model = \"TRUE\" \"FALSE\". \"TRUE\" model fit data. interventions_type = interventions modelled e.g. vaccination, quarantine, vector control, treatment, contact tracing, hospitals, treatment centres, safe burials, behaviour changes, , unspecified. code_available = whether code made available article. transmission_route = transmission route modelled, e.g. airborne close contact, human human, vector human, animal human, sexual, unspecified. assumptions = assumptions used model e.g. homogenous mixing, latent period incubation period, heterogeneity transmission rates groups time, age dependent susceptibility, unspecified. covidence_id = article identifier used Imperial team.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_model.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on the models identified in the systematic review of articles related to Marburg virus disease. — marburg_model","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_outbreak.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on the outbreaks identified in the systematic review of articles related to Marburg virus disease. — marburg_outbreak","title":"Data on the outbreaks identified in the systematic review of articles related to Marburg virus disease. — marburg_outbreak","text":"data set provides extracted data outbreaks Marburg virus disease (MVD).","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_outbreak.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on the outbreaks identified in the systematic review of articles related to Marburg virus disease. — marburg_outbreak","text":"csv file containing following parameters: outbreak_id = ID variable outbreak. article_id = ID variable article outbreak data came . outbreak_start_day = Day outbreak started (numeric - DD). outbreak_start_month = Month outbreak started (three letter abbreviation e.g. \"Aug\"). outbreak_start_year = Year outbreak started (numeric - YYYY). outbreak_end_day = Day outbreak ended (numeric - DD). outbreak_end_month = Month outbreak ended (three letter abbreviation e.g. \"Aug\"). outbreak_date_year = Year outbreak ended (numeric - YYYY). outbreak_duration_months = Outbreak duration months. outbreak_size = total outbreak size. asymptomatic_transmission = whether asymptomatic transmission occurred, either TRUE FALSE. outbreak_country = country outbreak occurred. outbreak_location = location outbreak occurred. cases_confirmed = total number confirmed cases. cases_mode_detection = either diagnosed based symptoms alone (\"Symptoms\"), confirmed via laboratory test PCR (\"Molecular (PCR etc)\"), \"specified\", NA. cases_suspected = total number suspected cases. cases_asymptomatic = total number asymptomatic cases. deaths = total number deaths. cases_severe_hospitalised = total number severe hospitalised cases. covidence_id = article identifier used Imperial team.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_outbreak.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on the outbreaks identified in the systematic review of articles related to Marburg virus disease. — marburg_outbreak","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on the parameters identified in the systematic review of articles related to Marburg virus disease. — marburg_parameter","title":"Data on the parameters identified in the systematic review of articles related to Marburg virus disease. — marburg_parameter","text":"data set provides extracted parameters Marburg virus disease (MVD).","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_parameter.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on the parameters identified in the systematic review of articles related to Marburg virus disease. — marburg_parameter","text":"csv file containing following parameters: parameter_data_id = ID variable parameter. article_id = ID variable article outbreak data came . parameter_type = extracted parameter (see marburg_dropdown_parameters full list parameters extracted). parameter_value = extracted parameter value stated article. parameter_unit = units extracted parameter (see marburg_dropdown_parameters full list parameter units). parameter_lower_bound = minimum value parameter across dimension disaggregation. parameter_upper_bound = maximum value parameter across dimension disaggregation. parameter_value_type = whether parameter value mean, median, standard deviation. parameter_uncertainty_single_value = extracted uncertainty single value provided. parameter_uncertainty_single_type = uncertainty type single value reported e.g. \"Standard Error (SE)\" (see marburg_dropdown_parameters full list options). parameter_uncertainty_lower_value = lower value paired uncertainty. parameter_uncertainty_upper_value = upper value paired uncertainty. parameter_uncertainty_type = uncertainty type pair values provided, e.g. \"CI90%\", \"CRI95%\" (see marburg_dropdown_parameters full list options). cfr_ifr_numerator = numerator cfr ifr provided article. cfr_ifr_denominator = denominator cfr ifr provided article. distribution_type = uncertainty given distribution (see marburg_dropdown_parameters full list options). distribution_par1_value = value distribution parameter 1. distribution_par1_type = distribution parameter 1 type, e.g. shape, scale (see marburg_dropdown_parameters full list options). distribution_par1_uncertainty = whether article reported uncertainty distribution parameter estimates (TRUE/FALSE). distribution_par2_value = value distribution parameter 2. distribution_par2_type = distribution parameter 2 type, e.g. shape, scale (see marburg_dropdown_parameters full list options). distribution_par2_uncertainty = whether article reported uncertainty distribution parameter estimates (TRUE/FALSE). method_from_supplement = whether parameter taken supplementary material article. TRUE/FALSE. method_moment_value = time period, either \"Pre outbreak\", Start outbreak\", \"Mid outbreak\", \"Post Outbreak\", \"\", specified article. cfr_ifr_method = whether method used calculate cfr/ifr \"Naive\", \"Adjusted\", \"Unknown\". method_r = method used estimate reproduction number (see marburg_dropdown_parameters full list options). method_disaggregated_by = parameter disaggregated e.g. Age, Sex, Region. method_disaggregated = whether parameter disaggregated (TRUE/FALSE). method_disaggregated_only = whether disaggregated data available (TRUE/FALSE). riskfactor_outcome = outcome(s) risk factor evaluated e.g. \"Death\" \"Infection\" (see marburg_dropdown_parameters full list options). riskfactor_name = potential risk factor(s) evaluated e.g. \"Age\" (see marburg_dropdown_parameters full list options). riskfactor_occupation = specific occupation(s) occupation risk factor (see marburg_dropdown_parameters full list options). riskfactor_significant = either \"Significant\", \"significant\", \"Unspecified\" NA. riskfactor_adjusted = either \"Adjusted\", \"adjusted\", \"Unspecified\". population_sex = sex study population, either \"Female\", \"Male\", \"\", \"Unspecified\". population_sample_type = study conducted e.g. \"Hospital based\", \"Population based\" (see 'Setting' marburg_dropdown_parameters full list options). population_group = population group e.g. \"Healthcare workers\" (see marburg_dropdown_parameters full list options). population_age_min = minimum age sample (reported). population_age_max = maximum age sample (reported). population_sample_size = total number participants/samples tested. population_country = country/countries study took place . population_location = location study took place e.g. region, city. population_study_start_day = day study started (numeric - DD) population_study_start_month = month study started (three letter abbreviation e.g. \"Feb\") population_study_start_year = year study started (numeric - YYYY) population_study_end_day = day study ended (numeric - DD) population_study_end_month = month study ended (three letter abbreviation e.g. \"Feb\") population_study_end_year = year study ended (numeric - YYYY) genome_site = portion pathogen’s genome used estimate extracted parameters. .e. gene, gene segment, codon position, generic description (‘whole genome’ ‘intergenic positions’). genomic_sequence_available = whether study sequenced new pathogen isolates accession numbers provided retrieval public database. TRUE/FALSE. parameter_class = class extracted parameter. Either \"Human delay\", \"Seroprevalence\", \"Severity\", \"Reproduction number\", \"Mutations\", \"Risk factors\", \"transmission parameters\". covidence_id = article identifier used Imperial team.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/marburg_parameter.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on the parameters identified in the systematic review of articles related to Marburg virus disease. — marburg_parameter","text":"Cuomo-Dannenburg G, McCain K, McCabe R, Unwin HJT, Doohan P, Nash RK, et al. Marburg Virus Disease outbreaks, mathematical models, disease parameters: Systematic Review. medRxiv; 2023. 2023.07.10.23292424. Available : https://www.medrxiv.org/content/10.1101/2023.07.10.23292424v1","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/mark_multiple_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Distinguish multiple estimates from the same study — mark_multiple_estimates","title":"Distinguish multiple estimates from the same study — mark_multiple_estimates","text":"Distinguish multiple estimates study Distinguish multiple estimates study","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/mark_multiple_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distinguish multiple estimates from the same study — mark_multiple_estimates","text":"","code":"mark_multiple_estimates(   df,   col = \"parameter_type\",   label_type = c(\"letters\", \"numbers\") )  mark_multiple_estimates(   df,   col = \"parameter_type\",   label_type = c(\"letters\", \"numbers\") )"},{"path":"https://mrc-ide.github.io/epireview/reference/mark_multiple_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distinguish multiple estimates from the same study — mark_multiple_estimates","text":"df data frame containing estimates. col column name table type. parameters \"parameter_type\"; models \"model_type\"; outbreaks \"outbreak_country\". label_type Type labels add distinguish multiple estimates. Must one \"letters\" \"numbers\".","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/mark_multiple_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distinguish multiple estimates from the same study — mark_multiple_estimates","text":"modified data frame updated article_label modified data frame updated article_label","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/mark_multiple_estimates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distinguish multiple estimates from the same study — mark_multiple_estimates","text":"study one estimate parameter_type/model/outbreak, add suffix article_label distinguish otherwise plotted line forest plot. Say two estimates parameter_type (p) study (s), labeled s 1 s 2. study one estimate parameter_type/model/outbreak, add suffix article_label distinguish otherwise plotted line forest plot. Say two estimates parameter_type (p) study (s), labeled s 1 s 2.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/mark_multiple_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distinguish multiple estimates from the same study — mark_multiple_estimates","text":"","code":"df <- data.frame(article_label = c(\"A\", \"A\", \"B\", \"B\", \"C\"),                  parameter_type = c(\"X\", \"X\", \"Y\", \"Y\", \"Z\")) mark_multiple_estimates(df, label_type = \"numbers\") #>   article_label parameter_type #> 1         A (1)              X #> 2         A (2)              X #> 3         B (1)              Y #> 4         B (2)              Y #> 5             C              Z  df <- data.frame(article_label = c(\"A\", \"A\", \"B\", \"B\", \"C\"),                  parameter_type = c(\"X\", \"X\", \"Y\", \"Y\", \"Z\")) mark_multiple_estimates(df, label_type = \"numbers\") #>   article_label parameter_type #> 1         A (1)              X #> 2         A (2)              X #> 3         B (1)              Y #> 4         B (2)              Y #> 5             C              Z"},{"path":"https://mrc-ide.github.io/epireview/reference/model_column_type.html","id":null,"dir":"Reference","previous_headings":"","what":"model_column_type — model_column_type","title":"model_column_type — model_column_type","text":"function defines column types models dataset. returns list column types corresponding names.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/model_column_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model_column_type — model_column_type","text":"","code":"model_column_type()"},{"path":"https://mrc-ide.github.io/epireview/reference/model_column_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"model_column_type — model_column_type","text":"list column types article data frame","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/model_column_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"model_column_type — model_column_type","text":"","code":"model_column_type() #> $id #> <collector_character> #>  #> $model_data_id #> <collector_character> #>  #> $article_id #> <collector_integer> #>  #> $pathogen #> <collector_character> #>  #> $ebola_variant #> <collector_character> #>  #> $model_type #> <collector_character> #>  #> $compartmental_type #> <collector_character> #>  #> $stoch_deter #> <collector_character> #>  #> $theoretical_model #> <collector_logical> #>  #> $interventions_type #> <collector_character> #>  #> $code_available #> <collector_logical> #>  #> $transmission_route #> <collector_character> #>  #> $assumptions #> <collector_character> #>  #> $covidence_id #> <collector_integer> #>"},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_column_type.html","id":null,"dir":"Reference","previous_headings":"","what":"outbreak_column_type — outbreak_column_type","title":"outbreak_column_type — outbreak_column_type","text":"function defines column types outbreaks dataset. returns list column types corresponding names.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_column_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"outbreak_column_type — outbreak_column_type","text":"","code":"outbreak_column_type()"},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_column_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"outbreak_column_type — outbreak_column_type","text":"list column types article data frame","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_column_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"outbreak_column_type — outbreak_column_type","text":"","code":"outbreak_column_type() #> $outbreak_id #> <collector_character> #>  #> $id #> <collector_character> #>  #> $article_id #> <collector_integer> #>  #> $outbreak_start_day #> <collector_double> #>  #> $outbreak_start_month #> <collector_character> #>  #> $outbreak_start_year #> <collector_double> #>  #> $outbreak_end_day #> <collector_double> #>  #> $outbreak_end_month #> <collector_character> #>  #> $outbreak_date_year #> <collector_double> #>  #> $outbreak_duration_months #> <collector_double> #>  #> $outbreak_size #> <collector_double> #>  #> $asymptomatic_transmission #> <collector_logical> #>  #> $outbreak_country #> <collector_character> #>  #> $outbreak_location #> <collector_character> #>  #> $cases_confirmed #> <collector_double> #>  #> $cases_mode_detection #> <collector_character> #>  #> $cases_suspected #> <collector_integer> #>  #> $cases_asymptomatic #> <collector_integer> #>  #> $deaths #> <collector_integer> #>  #> $cases_severe_hospitalised #> <collector_integer> #>  #> $covidence_id #> <collector_integer> #>"},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create table with all outbreak data for a particular pathogen — outbreak_table","title":"Create table with all outbreak data for a particular pathogen — outbreak_table","text":"Create table outbreak data particular pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create table with all outbreak data for a particular pathogen — outbreak_table","text":"","code":"outbreak_table(df, pathogen)"},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create table with all outbreak data for a particular pathogen — outbreak_table","text":"df processed data outbreak information produced data_outbreak_table() pathogen name pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create table with all outbreak data for a particular pathogen — outbreak_table","text":"returns flextable summarising extracted outbreaks specified pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/outbreak_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create table with all outbreak data for a particular pathogen — outbreak_table","text":"Country Location Article Start End Deaths Confirmed Suspected Asymptomatic Severe/hospitalised Confirmation Method Angola  Carroll2013 2005 2005 227 252   0 specified Angola  Palvin2014 2004 2005 227 252     Angola Uige Province Towner2006 Oct2004 Jul2005 227 252   0  Democratic Republic Congo Durba Watsa Borchert2002 Oct1998 May1999 61 73   0 Symptoms Democratic Republic Congo Durba Watsa Bausch2006 Oct1998 Sep2000 125 48 106  0 Molecular Democratic Republic Congo Durba Watsa villages Borchert2006 Oct1998 Aug2000  76 33 0  Molecular Democratic Republic Congo  Palvin2014 1998 2000 128 154     Germany Marburg, Frankfurt Main Albarino2013 18Aug1968 13Nov1968 5 23  1  Symptoms Germany,Yugoslavia Marburg (23), Frankfurt Main (6), Belgrade (2) Martini1973 Aug1968 Nov1968 7 31  1  Symptoms Germany,Yugoslavia  Pavlin2014 1967  7 31     Kenya  Pavlin2014 1980  1 2     Kenya  Pavlin2014 1987  1 1     Netherlands  Pavlin2014 2008  1 1     Russian Federation  Pavlin2014 1988  1 1     Russian Federation  Pavlin2014 1990  0 1     South Africa,Zimbabwe Johannesburg Conrad1978 12Feb1975  1 3   1 Molecular Uganda Kamwenge Ibanda Adjemian2011 10Jun2007 14Sep2007 1 4   0 Molecular Uganda Kabale; Ibanda; Mbarara; Kampala Albarino2013 18Oct2012 7Nov2012 4 15    Molecular Uganda Ibanda, Kabale Kamwenge Districts Knust2015 Jul2012 10Nov2012 15 15 11   Molecular Uganda Ibanda Kabale Mbonye2012 Sep2012 13Nov2012 7 9 5   Molecular Uganda Kampala Nyakarahuka2017 17Sep2014 28Sep2014 1 1   1 Molecular Uganda  Pavlin2014 2007  2 4     United States Colorado Pavlin2014 2008  0 1","code":"df <- data_outbreak_table(pathogen = \"marburg\") #> Rows: 23 Columns: 24 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): outbreak_start_month, outbreak_end_month, outbreak_country, outbre... #> dbl (15): outbreak_id, article_id, outbreak_start_day, outbreak_start_year, ... #> lgl  (1): outbreak_size #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. outbreak_table(df = df, pathogen = \"marburg\") #> Adding missing grouping variables: `outbreak_start_year` .cl-eefbc92a{}.cl-eef42558{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-eef42562{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-eef6c97a{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-eef6c984{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-eef6ebda{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ebdb{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ebe4{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ebee{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ebef{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ebf8{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ebf9{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec02{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec0c{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec0d{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec16{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec17{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec18{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec20{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec2a{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec34{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec35{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec3e{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec3f{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec40{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec48{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec49{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec52{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec5c{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec5d{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec5e{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec66{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec67{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec70{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec71{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec7a{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec84{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec85{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec8e{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec8f{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec98{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec99{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ec9a{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6eca2{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6eca3{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecac{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecb6{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecb7{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecc0{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecc1{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecca{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6eccb{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecd4{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecd5{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecde{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ece8{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ece9{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecf2{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecf3{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecf4{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecfc{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ecfd{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed06{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed07{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed10{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed11{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed12{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed1a{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed24{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed25{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed2e{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed2f{width:2.905in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed38{width:4.106in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed42{width:1.687in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed43{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed4c{width:1.167in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed4d{width:0.876in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed56{width:1.153in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed57{width:1.157in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed60{width:1.488in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed61{width:1.924in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-eef6ed62{width:2.044in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}CountryLocationArticleStartEndDeathsConfirmedSuspectedAsymptomaticSevere/hospitalisedConfirmation MethodAngolaCarroll2013200520052272520Not specifiedAngolaPalvin201420042005227252AngolaUige ProvinceTowner2006Oct2004Jul20052272520Democratic Republic of the CongoDurba and WatsaBorchert2002Oct1998May199961730SymptomsDemocratic Republic of the CongoDurba and WatsaBausch2006Oct1998Sep2000125481060Molecular  Democratic Republic of the CongoDurba and Watsa villagesBorchert2006Oct1998Aug200076330Molecular  Democratic Republic of the CongoPalvin201419982000128154GermanyMarburg, Frankfurt am MainAlbarino201318Aug196813Nov19685231SymptomsGermany,YugoslaviaMarburg (23), Frankfurt am Main (6), Belgrade (2)Martini1973Aug1968Nov19687311SymptomsGermany,YugoslaviaPavlin20141967731KenyaPavlin2014198012KenyaPavlin2014198711NetherlandsPavlin2014200811Russian FederationPavlin2014198811Russian FederationPavlin2014199001South Africa,ZimbabweJohannesburgConrad197812Feb1975131Molecular  UgandaKamwenge and IbandaAdjemian201110Jun200714Sep2007140Molecular  UgandaKabale; Ibanda; Mbarara; KampalaAlbarino201318Oct20127Nov2012415Molecular  UgandaIbanda, Kabale and Kamwenge DistrictsKnust2015Jul201210Nov2012151511Molecular  UgandaIbanda and KabaleMbonye2012Sep201213Nov2012795Molecular  UgandaKampalaNyakarahuka201717Sep201428Sep2014111Molecular  UgandaPavlin2014200724United StatesColoradoPavlin2014200801"},{"path":"https://mrc-ide.github.io/epireview/reference/overdispersion_contribution_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for overdispersion and relative contribution to transmission from human-human transmission parameters in the $params table from load_epidata() — overdispersion_contribution_key_columns","title":"Key columns for overdispersion and relative contribution to transmission from human-human transmission parameters in the $params table from load_epidata() — overdispersion_contribution_key_columns","text":"Key columns overdispersion relative contribution transmission human-human transmission parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/overdispersion_contribution_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for overdispersion and relative contribution to transmission from human-human transmission parameters in the $params table from load_epidata() — overdispersion_contribution_key_columns","text":"","code":"overdispersion_contribution_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/overdispersion_contribution_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for overdispersion and relative contribution to transmission from human-human transmission parameters in the $params table from load_epidata() — overdispersion_contribution_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/param_pm_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Update parameter uncertainty columns in a data frame — param_pm_uncertainty","title":"Update parameter uncertainty columns in a data frame — param_pm_uncertainty","text":"function updates parameter uncertainty columns data frame uncertainty given single value (standard deviation standard error). creates new columns called low' (parameter central value - uncertainty) high' (parameter central value + uncertainty). columns used forest_plot plot uncertainty intervals. uncertainty given range, midpoint range used central value (mid) lower upper bounds used low high values respectively.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/param_pm_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update parameter uncertainty columns in a data frame — param_pm_uncertainty","text":"","code":"param_pm_uncertainty(df)"},{"path":"https://mrc-ide.github.io/epireview/reference/param_pm_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update parameter uncertainty columns in a data frame — param_pm_uncertainty","text":"df data frame containing parameter uncertainty columns. typically output load_epidata.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/param_pm_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update parameter uncertainty columns in a data frame — param_pm_uncertainty","text":"updated data frame parameter uncertainty columns","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/param_pm_uncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update parameter uncertainty columns in a data frame — param_pm_uncertainty","text":"","code":"df <- data.frame(   parameter_value = c(10, 20, 30),   parameter_uncertainty_single_value = c(1, 2, 3),   parameter_uncertainty_lower_value = c(5, 15, 25),   parameter_uncertainty_upper_value = c(15, 25, 35),   parameter_uncertainty_type = c(NA, NA, NA),   parameter_uncertainty_singe_type = c(\"Standard Deviation\", \"Standard Error\", NA) ) updated_df <- param_pm_uncertainty(df) updated_df #>   parameter_value parameter_uncertainty_single_value #> 1              10                                  1 #> 2              20                                  2 #> 3              30                                  3 #>   parameter_uncertainty_lower_value parameter_uncertainty_upper_value #> 1                                 5                                15 #> 2                                15                                25 #> 3                                25                                35 #>   parameter_uncertainty_type parameter_uncertainty_singe_type low mid high #> 1                         NA               Standard Deviation   5  10   15 #> 2                         NA                   Standard Error  15  20   25 #> 3                         NA                             <NA>  25  30   35 #>    mid_type uncertainty_type #> 1 Extracted             <NA> #> 2 Extracted             <NA> #> 3 Extracted             <NA>"},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_column_type.html","id":null,"dir":"Reference","previous_headings":"","what":"parameter_column_type — parameter_column_type","title":"parameter_column_type — parameter_column_type","text":"function defines column types parameters dataset. returns list column types corresponding names.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_column_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parameter_column_type — parameter_column_type","text":"","code":"parameter_column_type()"},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_column_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parameter_column_type — parameter_column_type","text":"list column types article data frame","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_column_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parameter_column_type — parameter_column_type","text":"","code":"parameter_column_type() #> $parameter_data_id #> <collector_character> #>  #> $id #> <collector_character> #>  #> $article_id #> <collector_integer> #>  #> $parameter_type #> <collector_character> #>  #> $parameter_value #> <collector_double> #>  #> $parameter_unit #> <collector_character> #>  #> $parameter_lower_bound #> <collector_double> #>  #> $parameter_upper_bound #> <collector_double> #>  #> $parameter_value_type #> <collector_character> #>  #> $parameter_uncertainty_single_value #> <collector_double> #>  #> $parameter_uncertainty_singe_type #> <collector_character> #>  #> $parameter_uncertainty_lower_value #> <collector_double> #>  #> $parameter_uncertainty_upper_value #> <collector_double> #>  #> $parameter_uncertainty_type #> <collector_character> #>  #> $cfr_ifr_numerator #> <collector_integer> #>  #> $cfr_ifr_denominator #> <collector_integer> #>  #> $distribution_type #> <collector_character> #>  #> $distribution_par1_value #> <collector_double> #>  #> $distribution_par1_type #> <collector_character> #>  #> $distribution_par1_uncertainty #> <collector_logical> #>  #> $distribution_par2_value #> <collector_double> #>  #> $distribution_par2_type #> <collector_character> #>  #> $distribution_par2_uncertainty #> <collector_logical> #>  #> $method_from_supplement #> <collector_logical> #>  #> $method_moment_value #> <collector_character> #>  #> $cfr_ifr_method #> <collector_character> #>  #> $method_r #> <collector_character> #>  #> $method_disaggregated_by #> <collector_character> #>  #> $method_disaggregated #> <collector_logical> #>  #> $method_disaggregated_only #> <collector_logical> #>  #> $riskfactor_outcome #> <collector_character> #>  #> $riskfactor_name #> <collector_character> #>  #> $riskfactor_occupation #> <collector_character> #>  #> $riskfactor_significant #> <collector_character> #>  #> $riskfactor_adjusted #> <collector_character> #>  #> $population_sex #> <collector_character> #>  #> $population_sample_type #> <collector_character> #>  #> $population_group #> <collector_character> #>  #> $population_age_min #> <collector_double> #>  #> $population_age_max #> <collector_double> #>  #> $population_sample_size #> <collector_integer> #>  #> $population_country #> <collector_character> #>  #> $population_location #> <collector_character> #>  #> $population_study_start_day #> <collector_integer> #>  #> $population_study_start_month #> <collector_character> #>  #> $population_study_start_year #> <collector_integer> #>  #> $population_study_end_day #> <collector_integer> #>  #> $population_study_end_month #> <collector_character> #>  #> $population_study_end_year #> <collector_integer> #>  #> $genome_site #> <collector_character> #>  #> $genomic_sequence_available #> <collector_logical> #>  #> $parameter_class #> <collector_character> #>  #> $covidence_id #> <collector_integer> #>"},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a consistent color palette for use in figures — parameter_palette","title":"Define a consistent color palette for use in figures — parameter_palette","text":"Define consistent color palette use figures","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a consistent color palette for use in figures — parameter_palette","text":"","code":"parameter_palette(x)"},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a consistent color palette for use in figures — parameter_palette","text":"x list parameters. Optional. missing, entire palette returned.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a consistent color palette for use in figures — parameter_palette","text":"named list colors can used forest plots manually setting colors example scale_color_manual","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/parameter_palette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define a consistent color palette for use in figures — parameter_palette","text":"Sangeeta Bhatia","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/pretty_article_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Make pretty labels for articles — pretty_article_label","title":"Make pretty labels for articles — pretty_article_label","text":"function generates pretty labels articles. labels created combining surname first year year publication article. surname missing, use first name. missing, warning issued Covidence ID used instead.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/pretty_article_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make pretty labels for articles — pretty_article_label","text":"","code":"pretty_article_label(articles, mark_multiple)"},{"path":"https://mrc-ide.github.io/epireview/reference/pretty_article_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make pretty labels for articles — pretty_article_label","text":"articles data frame containing information articles. typically output load_epidata_raw. mark_multiple logical. TRUE, multiple studies author year marked suffix distinguish .","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/pretty_article_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make pretty labels for articles — pretty_article_label","text":"modified data frame additional column \"article_label\" containing generated labels.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/pretty_article_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make pretty labels for articles — pretty_article_label","text":"","code":"articles <- data.frame(   first_author_surname = c(\"Smith\", NA, \"Johnson\"),   first_author_first_name = c(NA, \"John\", NA),   year_publication = c(2010, NA, 2022),   covidence_id = c(\"ABC123\", \"DEF456\", \"GHI789\") ) pretty_article_label(articles, mark_multiple = TRUE) #> Warning: There is 1 article with missing first author surname. #> Warning: There is 1 article with missing year of publication. #>   first_author_surname first_author_first_name year_publication covidence_id #> 1                Smith                    <NA>             2010       ABC123 #> 2                 <NA>                    John               NA       DEF456 #> 3              Johnson                    <NA>             2022       GHI789 #>   article_label #> 1    Smith 2010 #> 2   John DEF456 #> 3  Johnson 2022"},{"path":"https://mrc-ide.github.io/epireview/reference/priority_pathogens.html","id":null,"dir":"Reference","previous_headings":"","what":"priority_pathogens — priority_pathogens","title":"priority_pathogens — priority_pathogens","text":"data set gives list priority pathogens Pathogen Epidemiology Review Group (PERG) carried systematic review. data set gives name pathogen used package associated information review.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/priority_pathogens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"priority_pathogens — priority_pathogens","text":"","code":"priority_pathogens()"},{"path":"https://mrc-ide.github.io/epireview/reference/priority_pathogens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"priority_pathogens — priority_pathogens","text":"data.frame following fields pathogen: name pathogen used package articles_screened: number titles abstracts screened inclusion articles_extracted: number articles data extracted doi: doi accompanying systematic review","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/priority_pathogens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"priority_pathogens — priority_pathogens","text":"Data priority pathogens included systematic review","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/qa_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality assessment questionnaire This function returns the list of 7 questions used to assess quality of articles. — qa_questions","title":"Quality assessment questionnaire This function returns the list of 7 questions used to assess quality of articles. — qa_questions","text":"Quality assessment questionnaire function returns list 7 questions used assess quality articles.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/qa_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality assessment questionnaire This function returns the list of 7 questions used to assess quality of articles. — qa_questions","text":"","code":"qa_questions()"},{"path":"https://mrc-ide.github.io/epireview/reference/qa_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality assessment questionnaire This function returns the list of 7 questions used to assess quality of articles. — qa_questions","text":"data.frame following columns: () qnames: names corresponding columns articles data.frame; (b) qtext: text question, (c) notes: additional notes.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/quality_assessment_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots for the quality assessment (QA) of the included studies — quality_assessment_plots","title":"Plots for the quality assessment (QA) of the included studies — quality_assessment_plots","text":"Plots quality assessment (QA) included studies","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/quality_assessment_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots for the quality assessment (QA) of the included studies — quality_assessment_plots","text":"","code":"quality_assessment_plots(pathogen = NA, prepend = \"\")"},{"path":"https://mrc-ide.github.io/epireview/reference/quality_assessment_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots for the quality assessment (QA) of the included studies — quality_assessment_plots","text":"pathogen processed data QA information (see vignette pathogen) prepend string allow loading data vignettes","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/quality_assessment_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots for the quality assessment (QA) of the included studies — quality_assessment_plots","text":"two plots summarise quality assessment scores","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/quality_assessment_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots for the quality assessment (QA) of the included studies — quality_assessment_plots","text":"","code":"quality_assessment_plots(pathogen = \"marburg\") #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`). #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://mrc-ide.github.io/epireview/reference/reorder_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder articles based on parameter value — reorder_studies","title":"Reorder articles based on parameter value — reorder_studies","text":"function takes dataframe input (typically params data.frame output load_epidata) reorders provide sensible order plotting. country, studies ordered parameter value midpoint parameter range parameter value missing. creates new column 'y' ordered factor levels corresponding article_label. order studies way, set reorder_studies FALSE parameter specific forest plot functions (e.g. forest_plot_rt).","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/reorder_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder articles based on parameter value — reorder_studies","text":"","code":"reorder_studies(df, reorder_by = \"population_country\")"},{"path":"https://mrc-ide.github.io/epireview/reference/reorder_studies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder articles based on parameter value — reorder_studies","text":"df input dataframe reordered reorder_by character. name column reorder data . Default \"population_country\"","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/reorder_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder articles based on parameter value — reorder_studies","text":"reordered dataframe","code":""},{"path":[]},{"path":"https://mrc-ide.github.io/epireview/reference/reorder_studies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder articles based on parameter value — reorder_studies","text":"","code":"ebola <- load_epidata(\"ebola\") #> ℹ ebola does not have any extracted outbreaks  #> information. Outbreaks will be set to NULL. #> Rows: 107 Columns: 2 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \";\" #> chr (2): parameter_type_short, parameter_type_full #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> ✔ Data loaded for ebola params <- ebola$params rt <- params[params$parameter_type == \"Reproduction number (Effective, Re)\",]  reorder_studies(param_pm_uncertainty(rt)) #> # A tibble: 91 × 83 #>    id     parameter_data_id covidence_id pathogen parameter_type parameter_value #>    <chr>  <chr>                    <int> <chr>    <chr>                    <dbl> #>  1 472ee… a97b0a0cd787228e…        23719 Ebola v… Reproduction …            0.33 #>  2 f22ca… baf56944162b6acc…          404 Ebola v… Reproduction …            0.73 #>  3 59052… f09308ea7f9dfa18…        17881 Ebola v… Reproduction …           NA    #>  4 54159… 9254ff2db0ac53e8…         3138 Ebola v… Reproduction …            0.84 #>  5 d03ce… 028c5c53f6ba5d73…        19035 Ebola v… Reproduction …            0.9  #>  6 aca68… 0fdc709369f7d292…         6003 Ebola v… Reproduction …            1.03 #>  7 59052… bd021cac38430bdf…        17881 Ebola v… Reproduction …            1.03 #>  8 07c43… dd6de5f34483b208…        17206 Ebola v… Reproduction …            1.06 #>  9 59544… 94e97cdb2fcc3029…        19291 Ebola v… Reproduction …            1.11 #> 10 8d70f… fd15f4e8f5d66c97…        17192 Ebola v… Reproduction …            1.14 #> # ℹ 81 more rows #> # ℹ 77 more variables: exponent <dbl>, parameter_unit <chr>, #> #   parameter_lower_bound <dbl>, parameter_upper_bound <dbl>, #> #   parameter_value_type <chr>, parameter_uncertainty_single_value <dbl>, #> #   parameter_uncertainty_singe_type <chr>, #> #   parameter_uncertainty_lower_value <dbl>, #> #   parameter_uncertainty_upper_value <dbl>, …"},{"path":"https://mrc-ide.github.io/epireview/reference/reparam_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Reparameterize Gamma Distribution — reparam_gamma","title":"Reparameterize Gamma Distribution — reparam_gamma","text":"function reparameterizes gamma distribution given data frame. parameter expressed gamma distribution shape scale, convert mean standard deviation plotting.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/reparam_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reparameterize Gamma Distribution — reparam_gamma","text":"","code":"reparam_gamma(df)"},{"path":"https://mrc-ide.github.io/epireview/reference/reparam_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reparameterize Gamma Distribution — reparam_gamma","text":"df data frame updated columns parameter value uncertainty.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/reparam_gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reparameterize Gamma Distribution — reparam_gamma","text":"data.frame modified data frame reparameterized gamma distributions.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/reproduction_number_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for reproduction number parameters in the $params table from load_epidata() — reproduction_number_key_columns","title":"Key columns for reproduction number parameters in the $params table from load_epidata() — reproduction_number_key_columns","text":"Key columns reproduction number parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/reproduction_number_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for reproduction number parameters in the $params table from load_epidata() — reproduction_number_key_columns","text":"","code":"reproduction_number_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/reproduction_number_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for reproduction number parameters in the $params table from load_epidata() — reproduction_number_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/risk_factors_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for risk factor parameters in the $params table from load_epidata() — risk_factors_key_columns","title":"Key columns for risk factor parameters in the $params table from load_epidata() — risk_factors_key_columns","text":"Key columns risk factor parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/risk_factors_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for risk factor parameters in the $params table from load_epidata() — risk_factors_key_columns","text":"","code":"risk_factors_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/risk_factors_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for risk factor parameters in the $params table from load_epidata() — risk_factors_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/risk_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create risk table — risk_table","title":"Create risk table — risk_table","text":"Create risk table","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/risk_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create risk table — risk_table","text":"","code":"risk_table(df, pathogen, supplement = FALSE)"},{"path":"https://mrc-ide.github.io/epireview/reference/risk_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create risk table — risk_table","text":"df processed data parameter information produced data_param_table() pathogen name pathogen supplement either TRUE FALSE. TRUE, returns supplementary table.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/risk_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create risk table — risk_table","text":"returns flextable summary risk factor data","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/risk_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create risk table — risk_table","text":"Outcome Risk factor Adjusted Significant significant Infection Contact animal Unknown 0  Infection Gathering Unknown 128  Infection Household contact Unknown 102  Infection Occupation - Funeral burial services Unknown 102  Infection Unknown 102 26 Infection Sex Unknown  26 Seropositivity Contact animal Adjusted  912 Seropositivity Contact animal Unknown  300 Seropositivity Gathering Unknown  300 Seropositivity Hospitalisation Adjusted 915  Seropositivity Household contact Adjusted  912 Seropositivity Occupation - Funeral burial services Adjusted  912","code":"df <- data_param_table(pathogen = \"marburg\", exclude = c(15, 17)) #> Rows: 70 Columns: 55 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (26): parameter_data_id, parameter_type, parameter_unit, parameter_value... #> dbl (18): article_id, parameter_value, parameter_lower_bound, parameter_uppe... #> lgl (11): distribution_type, distribution_par1_value, distribution_par1_type... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. risk_table(df = df, pathogen = \"marburg\") .cl-f1c05144{}.cl-f1ba49f2{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-f1ba49fc{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-f1bcaa6c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-f1bcaa80{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-f1bcc7c2{width:1.33in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7cc{width:3.375in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7d6{width:1.017in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7d7{width:1.165in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7e0{width:1.491in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7ea{width:1.33in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7f4{width:3.375in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7f5{width:1.017in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7f6{width:1.165in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc7fe{width:1.491in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc808{width:1.33in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc809{width:3.375in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc812{width:1.017in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc813{width:1.165in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc81c{width:1.491in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc81d{width:1.33in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc81e{width:3.375in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc826{width:1.017in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc830{width:1.165in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc831{width:1.491in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc83a{width:1.33in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc844{width:3.375in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc84e{width:1.017in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc84f{width:1.165in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc858{width:1.491in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc859{width:1.33in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc862{width:3.375in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc86c{width:1.017in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc876{width:1.165in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f1bcc877{width:1.491in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}OutcomeRisk factorAdjustedSignificantNot significantInfectionContact with animalUnknown0InfectionGatheringUnknown128InfectionHousehold contactUnknown102InfectionOccupation - Funeral and burial servicesUnknown102InfectionOtherUnknown10226InfectionSexUnknown26SeropositivityContact with animalAdjusted912SeropositivityContact with animalUnknown300SeropositivityGatheringUnknown300SeropositivityHospitalisationAdjusted915SeropositivityHousehold contactAdjusted912SeropositivityOccupation - Funeral and burial servicesAdjusted912"},{"path":"https://mrc-ide.github.io/epireview/reference/sero_key_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Key columns for serological parameters in the $params table from load_epidata() — sero_key_columns","title":"Key columns for serological parameters in the $params table from load_epidata() — sero_key_columns","text":"Key columns serological parameters $params table load_epidata()","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/sero_key_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key columns for serological parameters in the $params table from load_epidata() — sero_key_columns","text":"","code":"sero_key_columns()"},{"path":"https://mrc-ide.github.io/epireview/reference/sero_key_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key columns for serological parameters in the $params table from load_epidata() — sero_key_columns","text":"character vector.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/sero_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create seroprevalence table — sero_table","title":"Create seroprevalence table — sero_table","text":"Create seroprevalence table","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/sero_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create seroprevalence table — sero_table","text":"","code":"sero_table(df, pathogen)"},{"path":"https://mrc-ide.github.io/epireview/reference/sero_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create seroprevalence table — sero_table","text":"df processed data parameter information produced data_param_table() pathogen name pathogen","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/sero_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create seroprevalence table — sero_table","text":"returns flextable summary seroprevalence data","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/sero_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create seroprevalence table — sero_table","text":"Article Country Parameter type*  Seroprevalence (%)  Uncertainty type Number Seropositive Sample size Population Group Timing survey Disaggregated dataavailable Gonzalez1989 Cameroon,Central African Republic,Chad,Republic Congo,Equatorial Guinea,Gabon Unspecified  0.39   20 5,070 General population  Region Johnson1993 Central African Republic IFA     3 427 Outdoor workers   Johnson1993 Central African Republic IFA  3.20  Range 137 4,295 General population Pre outbreak Age, Region, Sex Gonzalez2000 Central African Republic IgG  2.40  Range 33 1,340    Borchert2005 Democratic Republic Congo IFA  0.00  Range 0 300  Post outbreak  Bausch2003 Democratic Republic Congo IgG  2.00   15 912  Mid outbreak  Borchert2006 Democratic Republic Congo IgG  1.65  CI95%   Household contacts survivors Post outbreak  Borchert2007 Democratic Republic Congo IgG  2.10     Healthcare workers Post outbreak  Ivanoff1982 Gabon IFA  0.00   0 197    Ivanoff1982 Gabon IFA  0.00   0 28 Pregnant women   Ivanoff1982 Gabon IFA  0.00   0 28   Becker1992 Germany IgG  2.60       Johnson1983 Kenya IFA     8 1,899   Region Johnson1983 Kenya IFA  0.00   0 741 General population Post outbreak  Martini1973 Kenya Unspecified     0 79 Post outbreak  Smith1982 Kenya Unspecified     2 186 Persons investigation Post outbreak  Smith1982 Kenya Unspecified     3 100 Healthcare workers Post outbreak  Smith1982 Kenya Unspecified     0 224 General population Post outbreak  Smith1982 Kenya Unspecified     0 63 Post outbreak  Smith1982 Kenya Unspecified     0 79 Post outbreak  Smith1982 Kenya Unspecified     0 44 Outdoor workers Post outbreak  Van der Waals1986 Liberia IFA  1.30   3 225 , Region Mathiot1989 Madagascar Unspecified  0.00   0 381  Region Tomori1988 Nigeria IFA  1.70   29 1,677 General population   Moyen2015 Republic Congo IgG  0.50      Pre outbreak  Schoepp2014 Sierra Leone IgM  3.60     Persons investigation  Rugarabamu2022 Tanzania IgM  0.30   1 308  Region Rodhain1989 Uganda HAI/HI  4.50   6 132    Evans2018 Uganda IgG     0 331   *HAI/HI: Hemagglutination Inhibition Assay;                     IFA: Indirect Fluorescent Antibody assay;                     IgG: Immunoglobulin G;                     IgM: Immunoglobulin M; Unspecified assay.","code":"df <- data_param_table(pathogen = \"marburg\", exclude = c(15, 17)) #> Rows: 70 Columns: 55 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (26): parameter_data_id, parameter_type, parameter_unit, parameter_value... #> dbl (18): article_id, parameter_value, parameter_lower_bound, parameter_uppe... #> lgl (11): distribution_type, distribution_par1_value, distribution_par1_type... #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 58 Columns: 25 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (8): pathogen, first_author_first_name, article_title, doi, journal, no... #> dbl (16): article_id, covidence_id, year_publication, volume, issue, page_fi... #> lgl  (1): paper_copy_only #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. sero_table(df = df, pathogen = \"marburg\") .cl-f2394040{}.cl-f22ff7ec{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-f22ff800{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-f2332d7c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-f2332d9a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-f2335752{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233575c{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335766{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335770{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335771{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335784{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335785{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233578e{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335798{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357a2{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357ac{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357ad{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357b6{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357c0{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357ca{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357d4{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357d5{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357d6{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357de{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357e8{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357e9{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357fc{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357fd{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23357fe{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335806{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335807{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335810{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233581a{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335824{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335825{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233582e{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233582f{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335830{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335838{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335839{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335842{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335843{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233584c{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335856{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335857{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335860{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233586a{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233586b{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335874{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233587e{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233587f{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335888{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335889{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335892{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233589c{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358a6{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358a7{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358ba{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358bb{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358c4{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358ce{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358d8{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358d9{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358e2{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358e3{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358ec{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358f6{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23358f7{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335900{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335901{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233590a{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335914{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335915{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233591e{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335928{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335929{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335932{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335933{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233593c{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335946{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335947{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335950{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233595a{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233595b{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335964{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335965{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233596e{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335978{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335979{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335982{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233598c{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f233598d{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335996{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335997{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359a0{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359a1{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359aa{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359ab{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359b4{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359be{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359c8{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359c9{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359d2{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359dc{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359dd{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359e6{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 1pt solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359e7{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359f0{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f23359fa{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a04{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a05{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a0e{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a0f{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a10{width:1.78in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a18{width:7.123in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a19{width:1.668in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a22{width:0.285in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a2c{width:1.932in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a36{width:1.684in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a37{width:2.04in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a40{width:1.286in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a4a{width:2.736in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a54{width:1.681in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-f2335a5e{width:1.941in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}ArticleCountryParameter type*Seroprevalence (%)Uncertainty typeNumber SeropositiveSample sizePopulation GroupTiming of surveyDisaggregated dataavailableGonzalez1989Cameroon,Central African Republic,Chad,Republic of the Congo,Equatorial Guinea,GabonUnspecified0.39205,070General populationRegionJohnson1993Central African RepublicIFA3427Outdoor workersJohnson1993Central African RepublicIFA3.20Range1374,295General populationPre outbreakAge, Region, SexGonzalez2000Central African RepublicIgG2.40Range331,340Borchert2005Democratic Republic of the CongoIFA0.00Range0300Post outbreakBausch2003Democratic Republic of the CongoIgG2.0015912Mid outbreakBorchert2006Democratic Republic of the CongoIgG1.65CI95%Household contacts of survivorsPost outbreakBorchert2007Democratic Republic of the CongoIgG2.10Healthcare workersPost outbreakIvanoff1982GabonIFA0.000197Ivanoff1982GabonIFA0.00028Pregnant womenIvanoff1982GabonIFA0.00028OtherBecker1992GermanyIgG2.60OtherJohnson1983KenyaIFA81,899RegionJohnson1983KenyaIFA0.000741General populationPost outbreakMartini1973KenyaUnspecified079OtherPost outbreakSmith1982KenyaUnspecified2186Persons under investigationPost outbreakSmith1982KenyaUnspecified3100Healthcare workersPost outbreakSmith1982KenyaUnspecified0224General populationPost outbreakSmith1982KenyaUnspecified063OtherPost outbreakSmith1982KenyaUnspecified079OtherPost outbreakSmith1982KenyaUnspecified044Outdoor workersPost outbreakVan der Waals1986LiberiaIFA1.303225OtherOtherOther, RegionMathiot1989MadagascarUnspecified0.000381OtherRegionTomori1988NigeriaIFA1.70291,677General populationMoyen2015Republic of the CongoIgG0.50Pre outbreakSchoepp2014Sierra LeoneIgM3.60Persons under investigationOtherRugarabamu2022TanzaniaIgM0.301308OtherRegionRodhain1989UgandaHAI/HI4.506132Evans2018UgandaIgG0331Other*HAI/HI: Hemagglutination Inhibition Assay;                     IFA: Indirect Fluorescent Antibody assay;                     IgG: Immunoglobulin G;                     IgM: Immunoglobulin M; Unspecified assay."},{"path":"https://mrc-ide.github.io/epireview/reference/shape_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"shape_palette function — shape_palette","title":"shape_palette function — shape_palette","text":"function generates shape palette based specified shape_by parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/shape_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shape_palette function — shape_palette","text":"","code":"shape_palette(shape_by = c(\"parameter_value_type\"), ...)"},{"path":"https://mrc-ide.github.io/epireview/reference/shape_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shape_palette function — shape_palette","text":"shape_by character vector specifying parameter shape palette . Currently, \"value_type\" supported. ... Additional arguments passed underlying palette function. treated names palette elements.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/shape_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shape_palette function — shape_palette","text":"shape palette based specified shape_by parameter.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/shape_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shape_palette function — shape_palette","text":"","code":"shape_palette(\"parameter_value_type\") #> $Mean #> [1] 16 #>  #> $mean #> [1] 16 #>  #> $average #> [1] 16 #>  #> $Median #> [1] 15 #>  #> $median #> [1] 15 #>  #> $`Std Dev` #> [1] 17 #>  #> $`std dev` #> [1] 17 #>  #> $sd #> [1] 17 #>  #> $other #> [1] 18 #>  #> $Other #> [1] 18 #>  #> $Unspecified #> [1] 5 #>  #> $unspecified #> [1] 5 #>"},{"path":"https://mrc-ide.github.io/epireview/reference/short_parameter_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Short labels parameters for use in figures — short_parameter_type","title":"Short labels parameters for use in figures — short_parameter_type","text":"Short labels parameters use figures","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/short_parameter_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Short labels parameters for use in figures — short_parameter_type","text":"","code":"short_parameter_type(x, parameter_type_full, parameter_type_short)"},{"path":"https://mrc-ide.github.io/epireview/reference/short_parameter_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Short labels parameters for use in figures — short_parameter_type","text":"x data.frame containing column called \"parameter_type\",  typically paramsdata.frame output load_epidata. parameter_type_full optional. User can specify full value parameter type already included function. parameter_type_short optional. Shorter value parameter_type_full","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/short_parameter_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Short labels parameters for use in figures — short_parameter_type","text":"data.frame new column called \"parameter_type_short\"","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/short_parameter_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Short labels parameters for use in figures — short_parameter_type","text":"function assigns short labels otherwise long parameter names. generally intended called directly used load_epidata data loaded. short parameter names read file \"param_name.csv\" package. want supply short names, can specifying parameter_type_full parameter_type_short arguments. Note however parameter_type_full contain parameter types data, short label (parameter_type_short) NA missing values. therefore easier recommended update column parameter_type_short data loaded via load_epidata.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/short_parameter_type.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Short labels parameters for use in figures — short_parameter_type","text":"Sangeeta Bhatia","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/theme_epireview.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting theme for epireview A standard theme for figures in epireview. — theme_epireview","title":"Plotting theme for epireview A standard theme for figures in epireview. — theme_epireview","text":"Plotting theme epireview standard theme figures epireview.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/theme_epireview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting theme for epireview A standard theme for figures in epireview. — theme_epireview","text":"","code":"theme_epireview(   base_size = 11,   base_family = \"\",   base_line_size = base_size/22,   base_rect_size = base_size/22 )"},{"path":"https://mrc-ide.github.io/epireview/reference/theme_epireview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting theme for epireview A standard theme for figures in epireview. — theme_epireview","text":"base_size base font size, given pts. base_family base font family base_line_size base size line elements base_rect_size base size rect elements","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/update_article_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Include key article information when DOI is missing — update_article_info","title":"Include key article information when DOI is missing — update_article_info","text":"function appends pretty_article_label include journal use information fill entry DOI missing. (Note: DOIs introduced late 1990s articles time often one.)","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/update_article_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include key article information when DOI is missing — update_article_info","text":"","code":"update_article_info(articles)"},{"path":"https://mrc-ide.github.io/epireview/reference/update_article_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include key article information when DOI is missing — update_article_info","text":"articles data frame containing information articles. typically output load_epidata_raw.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/update_article_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include key article information when DOI is missing — update_article_info","text":"modified data frame updated column \"doi\" NA values replaced either (1) article_label appended include journal available (2) just article_label journal entry NA.","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/update_article_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Include key article information when DOI is missing — update_article_info","text":"","code":"articles <- data.frame(   doi = c(\"10.123\", NA, \"10.234\"),   article_label = c(\"Smith 2020\", \"Smith 1979\", \"Smith 2023\"),    journal = c(\"Science\", \"Nature\", \"The Lancet\") ) update_article_info(articles) #>      doi article_label    journal        article_info #> 1 10.123    Smith 2020    Science              10.123 #> 2   <NA>    Smith 1979     Nature Smith 1979 (Nature) #> 3 10.234    Smith 2023 The Lancet              10.234"},{"path":"https://mrc-ide.github.io/epireview/reference/value_type_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a consistent shape palette for use in forest plots — value_type_palette","title":"Define a consistent shape palette for use in forest plots — value_type_palette","text":"map shape aesthetic value type .e., mean, median etc. function defines shape palette can used forest plots","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/value_type_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a consistent shape palette for use in forest plots — value_type_palette","text":"","code":"value_type_palette(x = NULL)"},{"path":"https://mrc-ide.github.io/epireview/reference/value_type_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a consistent shape palette for use in forest plots — value_type_palette","text":"x list parameters","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/value_type_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a consistent shape palette for use in forest plots — value_type_palette","text":"named list shapes names value types (mean, median, std dev etc.)","code":""},{"path":"https://mrc-ide.github.io/epireview/reference/value_type_palette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define a consistent shape palette for use in forest plots — value_type_palette","text":"Sangeeta Bhatia","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-140","dir":"Changelog","previous_headings":"","what":"epireview 1.4.0","title":"epireview 1.4.0","text":"Bug fixes SARS-CoV-1 data release Minor fixes Ebola data","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-136","dir":"Changelog","previous_headings":"","what":"epireview 1.3.6","title":"epireview 1.3.6","text":"FEATURE: default color palette updated new one ggsci introduces custom_palette() function support multi-country label visualization. BUG FIX: Functionality supply custom colour palette now works expected.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-135","dir":"Changelog","previous_headings":"","what":"epireview 1.3.5","title":"epireview 1.3.5","text":"BUG-FIX: Fixes #117. NA rows created filter_df_for_metamean used == compare strings, leading NAs created RHS NA. Comparison now done using %%.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-134","dir":"Changelog","previous_headings":"","what":"epireview 1.3.4","title":"epireview 1.3.4","text":"DATA: Adds SARS-CoV-1 data (articles, models, parameters). Outbreaks extracted.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-133","dir":"Changelog","previous_headings":"","what":"epireview 1.3.3","title":"epireview 1.3.3","text":"FEATURE: argument load_epidata made case-insensitive. Addresses #96","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-132","dir":"Changelog","previous_headings":"","what":"epireview 1.3.2","title":"epireview 1.3.2","text":"BUG-FIX: Fixes #86 removing duplicated row. Also fixes incorrectly entered method type CFR, incorrectly extracted population sizes.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-131","dir":"Changelog","previous_headings":"","what":"epireview 1.3.1","title":"epireview 1.3.1","text":"BUG-FIX: Fixes #104 using readr::read_delim read parameter type short names","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-130","dir":"Changelog","previous_headings":"","what":"epireview 1.3.0","title":"epireview 1.3.0","text":"Updated lassa data available following updated literature search","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-130-1","dir":"Changelog","previous_headings":"","what":"epireview 1.3.0","title":"epireview 1.3.0","text":"Improved messages loading data via load_epidata User-friendly getters key epi parameters Bug fixes","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-1213","dir":"Changelog","previous_headings":"","what":"epireview 1.2.13","title":"epireview 1.2.13","text":"FEATURE: new function format parameter dataset can input meta-analysis proportions.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-1212","dir":"Changelog","previous_headings":"","what":"epireview 1.2.12","title":"epireview 1.2.12","text":"FEATURE: Addresses #98 including article_info key column returned parameter specific getters invoked.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-1211","dir":"Changelog","previous_headings":"","what":"epireview 1.2.11","title":"epireview 1.2.11","text":"FEATURE: Adds R-user friendly parameter name params table loaded via load_epidata. also makes parameter names consistent across pathogens. Addresses #59.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-1210","dir":"Changelog","previous_headings":"","what":"epireview 1.2.10","title":"epireview 1.2.10","text":"FEATURE: Moves error logging cli package improves warnings addressing #57 #21","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-129","dir":"Changelog","previous_headings":"","what":"epireview 1.2.9","title":"epireview 1.2.9","text":"FEATURE: functions get specific parameters given pathogen.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-128","dir":"Changelog","previous_headings":"","what":"epireview 1.2.8","title":"epireview 1.2.8","text":"BUG FIX: Fixes #73 caused rows params dataset dropped reordering population country NA. FEATURE: reorder_studies can now reorder column params dataset","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-127","dir":"Changelog","previous_headings":"","what":"epireview 1.2.7","title":"epireview 1.2.7","text":"FEATURE: filter_df_for_metamean now includes rows uncertainty types introduced specifically SARS.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-126","dir":"Changelog","previous_headings":"","what":"epireview 1.2.6","title":"epireview 1.2.6","text":"FEATURE: Added custom axis-label functionality forest_plot() BUG FIX: Fixed bug whereby single uncertainty names used paired uncertainty values.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-125","dir":"Changelog","previous_headings":"","what":"epireview 1.2.5","title":"epireview 1.2.5","text":"FEATURE: addresses #80 including doi article columns merged key dfs.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-124","dir":"Changelog","previous_headings":"","what":"epireview 1.2.4","title":"epireview 1.2.4","text":"BUG FIX: Updated outbreak parameter column types. Fixes warnings issued lassa ebola data loaded.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-123","dir":"Changelog","previous_headings":"","what":"epireview 1.2.3","title":"epireview 1.2.3","text":"BUG-FIX: Fixes Issue #56 article labels NA article associated multiple ids.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-122","dir":"Changelog","previous_headings":"","what":"epireview 1.2.2","title":"epireview 1.2.2","text":"BUG-FIX: Fixes #71; file names changed match function names consistency.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-121","dir":"Changelog","previous_headings":"","what":"epireview 1.2.1","title":"epireview 1.2.1","text":"FEATURE: New function assign QA score articles simple consistent manner.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-120","dir":"Changelog","previous_headings":"","what":"epireview 1.2.0","title":"epireview 1.2.0","text":"Major release adding new features versions 1.1.1, 1.1.2, 1.13.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-113","dir":"Changelog","previous_headings":"","what":"epireview 1.1.3","title":"epireview 1.1.3","text":"FEATURE: Add function extract parameters.","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-112","dir":"Changelog","previous_headings":"","what":"epireview 1.1.2","title":"epireview 1.1.2","text":"FEATURE: Add function create pretty article labels","code":""},{"path":"https://mrc-ide.github.io/epireview/news/index.html","id":"epireview-111","dir":"Changelog","previous_headings":"","what":"epireview 1.1.1","title":"epireview 1.1.1","text":"FEATURE: Add filter_df_for_metamean function","code":""}]
